{"nbformat":4,"nbformat_minor":0,"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.6.5"},"colab":{"name":"Final_Python_Project_LOS","provenance":[{"file_id":"1BNMbwPgce6piT1VDI2QHsgldAkjiGztD","timestamp":1575845263714}],"collapsed_sections":[],"toc_visible":true}},"cells":[{"cell_type":"markdown","metadata":{"id":"8wgDFfnZXvzo","colab_type":"text"},"source":["# Import Libraries"]},{"cell_type":"code","metadata":{"id":"AxSSuzSYKZkQ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1594646580086,"user_tz":240,"elapsed":944,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"5941c358-b264-44b5-c8b0-b2104c7cda60"},"source":["import pandas as pd\n","import io\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","import datetime as dt\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import r2_score, mean_squared_error\n","from sklearn.metrics import confusion_matrix \n","from sklearn.preprocessing import MinMaxScaler\n","from sklearn.neighbors import KNeighborsRegressor\n","from sklearn.linear_model import LinearRegression\n","from sklearn.ensemble import RandomForestRegressor\n","from sklearn.ensemble import GradientBoostingRegressor\n","from sklearn.model_selection import GridSearchCV\n","from math import sqrt\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","from google.colab import files"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"sv1qc6O6asLl"},"source":["\n","\n","# Admissions Data"]},{"cell_type":"code","metadata":{"id":"CIZNqdgLKZkW","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":454},"executionInfo":{"status":"ok","timestamp":1594646581563,"user_tz":240,"elapsed":2406,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"0f654c52-87a9-44d8-ed5e-349f907aa0c6"},"source":["path_admissions = \"/content/drive/My Drive/Python Project/ADMISSIONS.csv\"\n","df_Admission = pd.read_csv(path_admissions)\n","df_Admission.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 58976 entries, 0 to 58975\n","Data columns (total 19 columns):\n"," #   Column                Non-Null Count  Dtype \n","---  ------                --------------  ----- \n"," 0   ROW_ID                58976 non-null  int64 \n"," 1   SUBJECT_ID            58976 non-null  int64 \n"," 2   HADM_ID               58976 non-null  int64 \n"," 3   ADMITTIME             58976 non-null  object\n"," 4   DISCHTIME             58976 non-null  object\n"," 5   DEATHTIME             5854 non-null   object\n"," 6   ADMISSION_TYPE        58976 non-null  object\n"," 7   ADMISSION_LOCATION    58976 non-null  object\n"," 8   DISCHARGE_LOCATION    58976 non-null  object\n"," 9   INSURANCE             58976 non-null  object\n"," 10  LANGUAGE              33644 non-null  object\n"," 11  RELIGION              58518 non-null  object\n"," 12  MARITAL_STATUS        48848 non-null  object\n"," 13  ETHNICITY             58976 non-null  object\n"," 14  EDREGTIME             30877 non-null  object\n"," 15  EDOUTTIME             30877 non-null  object\n"," 16  DIAGNOSIS             58951 non-null  object\n"," 17  HOSPITAL_EXPIRE_FLAG  58976 non-null  int64 \n"," 18  HAS_CHARTEVENTS_DATA  58976 non-null  int64 \n","dtypes: int64(5), object(14)\n","memory usage: 8.5+ MB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"nmeda0NzKZkh","colab_type":"code","colab":{}},"source":["# Feature Engineering for Length of Stay (LOS) target variable\n","# Convert admission and discharge times to datetime type\n","df_Admission['ADMITTIME'] = pd.to_datetime(df_Admission['ADMITTIME'])\n","df_Admission['DISCHTIME'] = pd.to_datetime(df_Admission['DISCHTIME'])\n","df_Admission['LOS'] = (df_Admission['DISCHTIME'] - df_Admission['ADMITTIME']).dt.total_seconds()/86400"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5TvjTesQKZkp","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":774},"executionInfo":{"status":"ok","timestamp":1594646581565,"user_tz":240,"elapsed":2393,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"007da7bd-eea6-4afe-f4da-e6333777700c"},"source":["# Checking for records where LOS is negative(error records)\n","df_Admission[df_Admission['LOS'] < 0]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ROW_ID</th>\n","      <th>SUBJECT_ID</th>\n","      <th>HADM_ID</th>\n","      <th>ADMITTIME</th>\n","      <th>DISCHTIME</th>\n","      <th>DEATHTIME</th>\n","      <th>ADMISSION_TYPE</th>\n","      <th>ADMISSION_LOCATION</th>\n","      <th>DISCHARGE_LOCATION</th>\n","      <th>INSURANCE</th>\n","      <th>LANGUAGE</th>\n","      <th>RELIGION</th>\n","      <th>MARITAL_STATUS</th>\n","      <th>ETHNICITY</th>\n","      <th>EDREGTIME</th>\n","      <th>EDOUTTIME</th>\n","      <th>DIAGNOSIS</th>\n","      <th>HOSPITAL_EXPIRE_FLAG</th>\n","      <th>HAS_CHARTEVENTS_DATA</th>\n","      <th>LOS</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>425</th>\n","      <td>534</td>\n","      <td>417</td>\n","      <td>102633</td>\n","      <td>2177-03-23 16:17:00</td>\n","      <td>2177-03-23 07:20:00</td>\n","      <td>2177-03-23 07:20:00</td>\n","      <td>URGENT</td>\n","      <td>PHYS REFERRAL/NORMAL DELI</td>\n","      <td>DEAD/EXPIRED</td>\n","      <td>Private</td>\n","      <td>NaN</td>\n","      <td>UNOBTAINABLE</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>ORGAN DONOR ACCOUNT</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>-0.372917</td>\n","    </tr>\n","    <tr>\n","      <th>456</th>\n","      <td>237</td>\n","      <td>181</td>\n","      <td>102631</td>\n","      <td>2153-10-12 09:49:00</td>\n","      <td>2153-10-12 06:29:00</td>\n","      <td>2153-10-12 06:29:00</td>\n","      <td>EMERGENCY</td>\n","      <td>EMERGENCY ROOM ADMIT</td>\n","      <td>DEAD/EXPIRED</td>\n","      <td>Private</td>\n","      <td>NaN</td>\n","      <td>PROTESTANT QUAKER</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>2153-10-12 06:23:00</td>\n","      <td>2153-10-12 07:45:00</td>\n","      <td>DISSECTING ANEURYSIM</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>-0.138889</td>\n","    </tr>\n","    <tr>\n","      <th>692</th>\n","      <td>644</td>\n","      <td>516</td>\n","      <td>187482</td>\n","      <td>2197-07-31 20:18:00</td>\n","      <td>2197-07-31 01:10:00</td>\n","      <td>2197-07-31 01:10:00</td>\n","      <td>EMERGENCY</td>\n","      <td>EMERGENCY ROOM ADMIT</td>\n","      <td>DEAD/EXPIRED</td>\n","      <td>Medicare</td>\n","      <td>NaN</td>\n","      <td>JEWISH</td>\n","      <td>WIDOWED</td>\n","      <td>UNKNOWN/NOT SPECIFIED</td>\n","      <td>2197-07-31 11:31:00</td>\n","      <td>2197-07-31 14:35:00</td>\n","      <td>RESPIRATORY DISTRESS</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>-0.797222</td>\n","    </tr>\n","    <tr>\n","      <th>1911</th>\n","      <td>1640</td>\n","      <td>1334</td>\n","      <td>138015</td>\n","      <td>2137-09-02 14:43:00</td>\n","      <td>2137-09-02 12:00:00</td>\n","      <td>2137-09-02 12:00:00</td>\n","      <td>NEWBORN</td>\n","      <td>CLINIC REFERRAL/PREMATURE</td>\n","      <td>DEAD/EXPIRED</td>\n","      <td>Private</td>\n","      <td>NaN</td>\n","      <td>PROTESTANT QUAKER</td>\n","      <td>NaN</td>\n","      <td>WHITE</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NEWBORN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>-0.113194</td>\n","    </tr>\n","    <tr>\n","      <th>1970</th>\n","      <td>1699</td>\n","      <td>1381</td>\n","      <td>181430</td>\n","      <td>2189-01-02 14:25:00</td>\n","      <td>2189-01-02 12:00:00</td>\n","      <td>2189-01-02 12:00:00</td>\n","      <td>EMERGENCY</td>\n","      <td>EMERGENCY ROOM ADMIT</td>\n","      <td>DEAD/EXPIRED</td>\n","      <td>Medicare</td>\n","      <td>NaN</td>\n","      <td>UNOBTAINABLE</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>2189-01-02 10:31:00</td>\n","      <td>2189-01-02 15:56:00</td>\n","      <td>STROKE;TELEMETRY</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>-0.100694</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>57233</th>\n","      <td>57980</td>\n","      <td>96810</td>\n","      <td>165589</td>\n","      <td>2103-09-25 20:38:00</td>\n","      <td>2103-09-25 12:00:00</td>\n","      <td>2103-09-25 12:00:00</td>\n","      <td>EMERGENCY</td>\n","      <td>EMERGENCY ROOM ADMIT</td>\n","      <td>DEAD/EXPIRED</td>\n","      <td>Medicaid</td>\n","      <td>RUSS</td>\n","      <td>UNOBTAINABLE</td>\n","      <td>WIDOWED</td>\n","      <td>WHITE</td>\n","      <td>2103-09-25 19:27:00</td>\n","      <td>2103-09-25 21:37:00</td>\n","      <td>CARDIAC ARREST</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>-0.359722</td>\n","    </tr>\n","    <tr>\n","      <th>57559</th>\n","      <td>58635</td>\n","      <td>98943</td>\n","      <td>193747</td>\n","      <td>2164-11-14 20:03:00</td>\n","      <td>2164-11-14 12:00:00</td>\n","      <td>2164-11-14 12:00:00</td>\n","      <td>EMERGENCY</td>\n","      <td>EMERGENCY ROOM ADMIT</td>\n","      <td>DEAD/EXPIRED</td>\n","      <td>Medicare</td>\n","      <td>ENGL</td>\n","      <td>UNOBTAINABLE</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>2164-11-14 18:24:00</td>\n","      <td>2164-11-14 20:54:00</td>\n","      <td>INTRACRANIAL HEMORRHAGE</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>-0.335417</td>\n","    </tr>\n","    <tr>\n","      <th>57902</th>\n","      <td>58720</td>\n","      <td>99207</td>\n","      <td>191004</td>\n","      <td>2143-07-06 19:59:00</td>\n","      <td>2143-07-06 12:00:00</td>\n","      <td>2143-07-06 12:00:00</td>\n","      <td>EMERGENCY</td>\n","      <td>EMERGENCY ROOM ADMIT</td>\n","      <td>DEAD/EXPIRED</td>\n","      <td>Medicaid</td>\n","      <td>ENGL</td>\n","      <td>CATHOLIC</td>\n","      <td>DIVORCED</td>\n","      <td>WHITE</td>\n","      <td>2143-07-06 19:30:00</td>\n","      <td>2143-07-06 20:05:00</td>\n","      <td>GSW L. CHEST  WALL &amp; ABDOMEN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>-0.332639</td>\n","    </tr>\n","    <tr>\n","      <th>58346</th>\n","      <td>55950</td>\n","      <td>90642</td>\n","      <td>101946</td>\n","      <td>2122-04-24 14:36:00</td>\n","      <td>2122-04-24 12:00:00</td>\n","      <td>2122-04-24 12:00:00</td>\n","      <td>EMERGENCY</td>\n","      <td>TRANSFER FROM HOSP/EXTRAM</td>\n","      <td>DEAD/EXPIRED</td>\n","      <td>Private</td>\n","      <td>NaN</td>\n","      <td>CATHOLIC</td>\n","      <td>MARRIED</td>\n","      <td>UNABLE TO OBTAIN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>ST-SEGMENT ELEVATION MYOCARDIAL INFARCTION\\CATH</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>-0.108333</td>\n","    </tr>\n","    <tr>\n","      <th>58884</th>\n","      <td>57477</td>\n","      <td>95367</td>\n","      <td>139266</td>\n","      <td>2135-04-03 14:16:00</td>\n","      <td>2135-04-03 12:00:00</td>\n","      <td>2135-04-03 12:00:00</td>\n","      <td>EMERGENCY</td>\n","      <td>EMERGENCY ROOM ADMIT</td>\n","      <td>DEAD/EXPIRED</td>\n","      <td>Medicare</td>\n","      <td>ENGL</td>\n","      <td>CATHOLIC</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>2135-04-03 12:23:00</td>\n","      <td>2135-04-03 15:41:00</td>\n","      <td>CHEST PAIN</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>-0.094444</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>98 rows × 20 columns</p>\n","</div>"],"text/plain":["       ROW_ID  SUBJECT_ID  ...  HAS_CHARTEVENTS_DATA       LOS\n","425       534         417  ...                     1 -0.372917\n","456       237         181  ...                     1 -0.138889\n","692       644         516  ...                     0 -0.797222\n","1911     1640        1334  ...                     1 -0.113194\n","1970     1699        1381  ...                     1 -0.100694\n","...       ...         ...  ...                   ...       ...\n","57233   57980       96810  ...                     1 -0.359722\n","57559   58635       98943  ...                     1 -0.335417\n","57902   58720       99207  ...                     1 -0.332639\n","58346   55950       90642  ...                     1 -0.108333\n","58884   57477       95367  ...                     1 -0.094444\n","\n","[98 rows x 20 columns]"]},"metadata":{"tags":[]},"execution_count":5}]},{"cell_type":"code","metadata":{"id":"i1LEp2CmKZku","colab_type":"code","colab":{}},"source":["# Remove records where LOS is negative(data cleansing)\n","df_Admission=df_Admission[df_Admission['LOS'] > 0]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Y4OIiQ9ZKZky","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"status":"ok","timestamp":1594646581835,"user_tz":240,"elapsed":2646,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"8c919c96-1f56-4aa8-ff50-4dff2f0313f0"},"source":["# Plotting LOS distribution \n","plt.hist(df_Admission['LOS'], bins=100)\n","plt.xlim(0, 50)\n","plt.title('LOS distribution')\n","plt.ylabel('Count')\n","plt.xlabel('LOS days')\n","plt.tick_params(top=False, right=False) \n","plt.show();\n"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"by3dTuvnKZk3","colab_type":"code","colab":{}},"source":["# Remove columns\n","df_Admission.drop(columns=['ROW_ID','DISCHTIME',  \n","                'EDREGTIME', 'EDOUTTIME', 'HOSPITAL_EXPIRE_FLAG',\n","                'HAS_CHARTEVENTS_DATA'], inplace=True)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"u6XnqnHrKZk6","colab_type":"code","colab":{}},"source":["# Mapping 1 fro dead patients\n","df_Admission['DECEASED'] = df_Admission['DEATHTIME'].notnull().map({True:1, False:0})"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"9OIo2kKaxh34","colab_type":"code","colab":{}},"source":["# First admission date to calculate exact age on admission\n","df_first_adm = df_Admission[['SUBJECT_ID','ADMITTIME']].groupby('SUBJECT_ID').min().reset_index()\n","df_first_adm = df_Admission.rename(columns={'SUBJECT_ID' : 'SUBJECT_ID','ADMITTIME': 'FIRST_ADMIT'})\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"mkyMYmm39koR","colab_type":"code","colab":{}},"source":["df_first_adm=df_first_adm[['SUBJECT_ID','FIRST_ADMIT']]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"IoVuTb4K9MD3","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":168},"executionInfo":{"status":"ok","timestamp":1594646582062,"user_tz":240,"elapsed":2846,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"8dc4a02d-0707-4424-c723-fd1cbf1a2630"},"source":["df_first_adm.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 58878 entries, 0 to 58975\n","Data columns (total 2 columns):\n"," #   Column       Non-Null Count  Dtype         \n","---  ------       --------------  -----         \n"," 0   SUBJECT_ID   58878 non-null  int64         \n"," 1   FIRST_ADMIT  58878 non-null  datetime64[ns]\n","dtypes: datetime64[ns](1), int64(1)\n","memory usage: 1.3 MB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"KxaNqhCiKZlE","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"status":"ok","timestamp":1594646582267,"user_tz":240,"elapsed":3040,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"be41b743-6d7d-4ae7-f64a-03b46ee06472"},"source":["# Plot LOS distribution for the living\n","plt.hist(df_Admission['LOS'].loc[df_Admission['DECEASED'] == 0], bins=100)\n","plt.xlim(0, 50)\n","plt.title('Survived LOS Distribution')\n","plt.ylabel('Count')\n","plt.xlabel('LOS days')\n","plt.tick_params(top=False, right=False) \n","plt.show();"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"v4mG-aP3KZlH","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":295},"executionInfo":{"status":"ok","timestamp":1594646582754,"user_tz":240,"elapsed":3514,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"970e2bfa-956e-4a32-e7e8-4373138785eb"},"source":["# LOS distribution for the dead\n","plt.hist(df_Admission['LOS'].loc[df_Admission['DECEASED'] == 1], bins=100, color = 'red')\n","plt.xlim(0, 50)\n","plt.title('Deceased LOS Distribution')\n","plt.ylabel('Count')\n","plt.xlabel('LOS days')\n","plt.tick_params(top=False, right=False) \n","plt.show();"],"execution_count":null,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"6xGygUloCWqT","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":331},"executionInfo":{"status":"ok","timestamp":1594646582755,"user_tz":240,"elapsed":3502,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"564ff65a-6966-4905-f606-90787022118a"},"source":["#Box plot for INSURANCE\n","los = df_Admission[['INSURANCE', 'LOS']].groupby('INSURANCE').median().reset_index()\n","print(los.columns)\n","ins_cat = los['INSURANCE'].values.tolist()\n","print(ins_cat)\n","hist_data = []\n","for cat in ins_cat:\n","  hist_data.append(df_Admission['LOS'].loc[df_Admission['INSURANCE']==cat].values)\n","plt.boxplot(hist_data, 0,sym='')\n","plt.xticks(ticks=[1,2,3,4,5],labels=ins_cat)\n","plt.ylabel('LOS days')\n","plt.title('Insurance v/s LOS(days)')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Index(['INSURANCE', 'LOS'], dtype='object')\n","['Government', 'Medicaid', 'Medicare', 'Private', 'Self Pay']\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Insurance v/s LOS(days)')"]},"metadata":{"tags":[]},"execution_count":15},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAX4AAAEICAYAAABYoZ8gAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAbW0lEQVR4nO3deZxcVZ338c83rJEESE96InsQowwyECSiCMgiIjAKgqKCMMAwrzAMKiA+I6POY9SZeXCGRUBxBiUSWWSVMUpk3wWBDoYlCciaIRihkUAS9oTf88c9RReVqu7q5VZ153zfr1e9+tZdf/f0rV+de86texURmJlZPka1OwAzM2stJ34zs8w48ZuZZcaJ38wsM078ZmaZceI3M8uME7/ZKkZSp6SHJI1uMH2apAtK3P4ESfMlrVXWNmxwnPitT5KelLRnu+MYjiStKek5SWP6sUzDxCtpfUk/kvQnSS9LekDSkTXz7CzpDkkvSnpe0m8lfaBqlpOA8yLilYHt1eBExDPATcDUdmzf+rZ6uwMwqyVJgCLizXbH0oSPAHMiYtlgVyRpTeB64FlgR2Ah8FFghqRxEXGapHWBXwPHAJcCawK7AK+ldawFHA5MHmw8g3Qh8N/AWW2Ow+pwjd/6RdIRkm6XdIqkxZKekLRPzfTHJS1N076Qxr+tlitpoqSQtHp6f7Okf5P0W+Bl4F2SjkxNBkvTOo+uWn43SQslnSjpWUmLqmvGkkZLOlXSglQzvr3S9CHpQ6nG/IKk+yTt1mBfvybp8ppxZ0g6s2rUvsCs3va9Hw4DNgUOiognIuKNiLga+DLwnZT03wMQET+PiBUR8UpEXBsR96d1fBB4ISIWVsW8uaRbUlzXAeNr9umydIbxoqRbJb0vjf+ApGckrVY174GS7kvDO0jqkrQkzXda1WrvovgfbtbPMrAWcOK3gfgg8DBFAvkP4FwV1gHOBPaJiLHAh4E5/VjvYRTNA2OBBRQ1308A6wJHAqdLen/V/O8E1gM2Ao4CfihpXJp2CrB9iqED+CfgTUkbAVcB/5rGfxW4QlJnnXguBvaVNBYgJcDPAhdVzbMvcNUQ7DvAx4DfRMRLNeOvANamOAv4A7BC0gxJ+1Ttb8VfU/xvql0EzKb4f32X4oyg2m+AScBfAvdS1NaJiHuAPwN7Vc17GPCzNHwGcEZErAtsQXEGQlp2OfAosG3fu22t5sRvA7EgIn4cESuAGcAGwIQ07U1ga0mjI2JRRMztx3rPi4i5EbE81XaviojHonALcC1Fs0bFG8B30ryzgGXAeyWNAv4OOC4ink414zsi4jXgUGBWRMyKiDcj4jqgiyKBv01ELKBIhAekUXsAL0fE7wAkbQGsHhGVRDuYfYciMS+qE8dy4DlgfEQsAXYGAvgx0C1ppqRK+a8PLK0sK2lT4APAv0TEaxFxK/CrmvVPj4ilqXymAdtKWi9NnkFRZkjqAD5OzxffG8C7JY2PiGWVcqmyNMVjw4wTvw3EnyoDEfFyGhyTaqqfA/4BWCTpKklb9mO9T1W/STXa36UOzBcoknN1M8WfU1KseBkYk+ZZG3iszjY2Aw5KzTwvpPXuTPHlVc9FwMFp+BBWru3/BmAI9h2K5L5SHKk5bHyaTkTMj4gjImJjYGtgQ+D7afbFFGdMFRsCi2vOIhZUrXs1SSdLekzSEuDJNKlSzhcAn0xnNJ8FbouIypfTURRNTw9JukfSJ2pCHwu80PTeW8s48duQiohrIuJjFAnsIYpaKcBLwDuqZn1nvcUrA6mT8gqKJpsJEbE+RVu6mgjjOeBViuaHWk8B50fE+lWvdSLi5AbrugzYTdLGFDX/2sQ/663gG+97s64H9klJttqnKTpva2vURMRDwHkUXwAA95P6AZJFwLiadW5aNXwIsD+wJ0Wz2cQ0Xmn9TwN3AgdSNPOcX7XtRyLiYIomou8Bl1e2k76s3g3c1/duW6s58duQUXH99v7pw/8aRdNL5cqcOcBHJG2amhH+uY/VrQmsBXQDy1MH8l69L1JIVwNNB06TtGGq1e6YvkwqNdiPp/Frp47ijRusqxu4Gfgp8EREzE/7+g5gB4rLFvva93pGpW1XXmtRJNWFwGUqOr/XkPRxir6DaRHxoqQtU4f2xmm7m1CckVS+FO4G1k99GZXmqi7g2youPd0Z+GRVHGNTvH+m+GL+9zqx/oyij+SvgV9URko6VFJnKu9Kzb6yzzsAT6bt2zDjxG9DaRTwFeCPwPPArhSXHZLa0i+hqJHOprgksaGIWEpxNculFM0XhwAz+xHLV4EHgHtSLN8DRkXEUxQ13K9TfKk8Bfwfev8sXERRI66u7e8B3BkRr6b3Dfe9gYOBV6pej6U29j1TTHcBS4DTgG9ExH+m5ZZSdK7fJeklioT/IHAiQES8TnEGcGjVtg5JyzwPfIuezlnS8ALgaWAedc4qgCspmsiurGraA9gbmCtpGUVH7+erfjvwBeC/etl/ayP5QSxm/SfpbODBiDi73bHUSlco3QZsN1Q/4pL0GHB0RFzfxLx/CdyStv9qX/Nb6/kHXGYDM4eaq2OGi9Q81d+O5YYkfZqi/+XGJrf/LPBXQ7V9G3qu8ZtZQ5JuBrYCDouIa9ocjg0RJ34zs8y4c9fMLDMjoo1//PjxMXHixHaHYWY2osyePfu5iFjpdiQjIvFPnDiRrq6udodhZjaiSKr7Owo39ZiZZcaJ38wsM078ZmaZceI3M8uME7+ZWWac+M3MMuPEb2aWGSd+M7PMjIgfcFlrSc085Kpvvg+U2fDkxG8r6SthS3JSNxvB3NRjZpYZJ34zs8w48ZuZZcaJ38wsM078ZmaZceI3M8uME7+ZWWac+M3MMuPEb2aWGSd+M7PMOPGbmWWmtMQvaRNJN0maJ2mupOPS+GmSnpY0J732LSsGMzNbWZk3aVsOnBgR90oaC8yWdF2adnpEnFLits3MrIHSEn9ELAIWpeGlkuYDG5W1PTMza05L2vglTQS2A+5Ko74o6X5J0yWNa0UMZmZWKD3xSxoDXAEcHxFLgB8BWwCTKc4ITm2w3FRJXZK6uru7yw7TzCwbpSZ+SWtQJP0LI+IXABHxTESsiIg3gR8DO9RbNiLOiYgpETGls7OzzDArsQ7Jy8xsuCutjV9FFjwXmB8Rp1WN3yC1/wMcADxYVgz94adOmVkuyryqZyfgMOABSXPSuK8DB0uaDATwJHB0iTGYmVmNMq/quR2o1/Yxq6xtmplZ3/zLXTOzzDjxm5llxonfzCwzTvxmZpkp86oesxFvqH6b4UuBbThx4jfrhX/fYasiN/WYmWXGid/MLDNO/GZmmXHiNzPLjDt3zawpvsJp1eHEb2ZN8RVOqw439ZiZZcaJ38wsM078ZmaZceI3M8uME7+ZWWac+M3MMuPEb2aWGSd+M7PMOPGbmWXGid/MLDNO/GZmmXHiNzPLjBO/mVlmnPjNzDLjxG9mlhknfjOzzJSW+CVtIukmSfMkzZV0XBrfIek6SY+kv+PKisHMzFZWZo1/OXBiRGwFfAg4VtJWwEnADRExCbghvTczsxYpLfFHxKKIuDcNLwXmAxsB+wMz0mwzgE+VFYOZma2sJW38kiYC2wF3ARMiYlGa9CdgQoNlpkrqktTV3d3dijDNzLJQeuKXNAa4Ajg+IpZUT4viycx1n84cEedExJSImNLZ2Vl2mGZm2Sg18UtagyLpXxgRv0ijn5G0QZq+AfBsmTGYmdnblXlVj4BzgfkRcVrVpJnA4Wn4cOCXZcVgZmYrW73Ede8EHAY8IGlOGvd14GTgUklHAQuAz5YYg5mZ1Sgt8UfE7YAaTP5oWds1M7Pe+Ze7ZmaZceI3M8uME7+ZWWac+M3MMuPEb2aWGSd+M7PMOPGbmWXGid/MLDNO/GZmmXHiNzPLjBO/mVlmnPjNzDLjxG9mlhknfjOzzDjxm5llpswHsZiZrZKKBwwOXvHY8dZz4jcz66e+EraktiX1Zripx8wsM078ZmaZ6TPxS1pH0qg0/B5J+0lao/zQzMysDM3U+G8F1pa0EXAtcBhwXplBmZlZeZpJ/IqIl4EDgbMj4iDgfeWGZWZmZWkq8UvaEfgCcFUat1p5IZmZWZmaSfzHAf8MXBkRcyW9C7ip3LDMzKwszVzHvzgi9qu8iYjHgS+XF5KZmZWpmRr/2ZLulvSPktYrPSIzMytVn4k/InYBDgU2AWZLukjSXqVHZmZmpWjqB1wR8Qfgm8DXgF2BMyQ9JOnARstImi7pWUkPVo2bJulpSXPSa9/B7oCZmfVPMz/g2kbS6cB8YA/gkxHxV2n49F4WPQ/Yu8740yNicnrNGkDMZmY2CM107p4F/AT4ekS8UhkZEX+U9M1GC0XErZImDjpCMzMbUs208e8aEedXJ/2qaecPYJtflHR/agoa12gmSVMldUnq6u7uHsBmzMysnmaaeiZJulzSPEmPV14D3N6PgC2AycAi4NRGM0bEORExJSKmdHZ2DnBzZmZWq5nO3Z9SJOzlwO7Az4ALBrKxiHgmIlZExJvAj4EdBrIeMzMbuGYS/+iIuIHinj0LImIa8DcD2ZikDareHgA82GheMzMrRzOdu6+l2zI/IumLwNPAmL4WkvRzYDdgvKSFwLeA3SRNBgJ4Ejh6gHGbmdkANZP4jwPeQXGbhu9SXMZ5eF8LRcTBdUaf26/ozMxsyPWZ+CPinjS4DDiy3HDMzKxsDRO/pF9RNMnUVX3jNjMzGzl6q/Gfkv4eCLyTnit5DgaeKTMoMzMrT8PEHxG3AEg6NSKmVE36laSu0iMzM7NSNHM55zrp4SsASNocWKe8kMzMrEzNXNVzAnBz+rWugM2AqaVGZWZmpWnmqp6rJU0CtkyjHoqI18oNy8zMytJMjZ+U6O8rORYzM2uBph7EYmZmqw4nfjOzzDRM/JI2q364uqTdJZ0h6SuS1mxNeFaGjo4OJA34BQxqeUl0dHS0uRTM8tVbjf9S0mWb6cZqlwH/C2wLnF1+aFaWxYsXExFtfS1evLjdxWCWrd46d0dHxB/T8KHA9Ig4Nd2pc075oZmZWRl6q/GrangP4AaA9BAVMzMboXqr8d8o6VKKRySOA26Etx6m8noLYjMzsxL0lviPBz4HbADsHBFvpPHvBL5RdmBmZlaO3m7SFsDF6d4820naDpgXEb9vWXRmJevo6Bh0R3PlSqeBGjduHM8///yg1mHWH73dj39d4CfA9vT8aneypNnAURGxpAXxmZWqcoVTOw32i8Osv3rr3D0TmAdMiogDI+JAYAvgAeAHrQjOzMyGXm9t/DtFxBHVI1Lzz3ckPVJqVCXwKb2ZWaGpm7TVMeLOTX1Kb2ZW6K2p5w5J/1c12UrSvwB3lhuWmZmVpbca/5eAc4FHJVV+qTsZ+D1wVNmBmZlZOXq7nHMJcJCkLYCt0uh5EfGYpOOB77ciQDNrDfeD5aOZJ3A9BjxWM/orOPGbrVLcD5aPgd6P3/8dM7MRaqCJv73VAjMzG7DeHsSyVNKSOq+lwIZ9rVjSdEnPSnqwalyHpOskPZL+jhui/TAzsyY1TPwRMTYi1q3zGhsRzVz/fx6wd824k4AbImISxW2eTxpw5GZmNiClPXM3Im4Farvn9wdmpOEZwKfK2r6ZmdXX6oetT4iIRWn4T8CERjNKmiqpS1JXd3d3a6IzM8tAqxP/W9J9fxp2EkfEORExJSKmdHZ2tjAyM7NVW6sT/zPpCV6VJ3k92+Ltm5llr9WJfyZweBo+HPhli7dvZpa90hK/pJ9T3MztvZIWSjoKOBn4WLqt857pvZmZtdBAb8vcp4g4uMGkj5a1TTMz61vbOnfNzKw9nPjNzDLjxG9mlhknfjOzzDjxm5llxonfzCwzTvxmZplx4jczy4wTv5lZZpz4zcxqdHR0IGnAL2BQy0uio6OjtP0r7ZYNZmYj1eLFiynuHN8+lS+QMrjGb2aWGSd+M7PMOPGbmWXGid/MLDPu3LWsxbfWhWnrtT8GsxZy4res6dtLhsXVGzGtrSFYZtzUY2aWGSd+M7PMOPGbmWXGid/MLDNO/GZmmfFVPRnyJYxmeXPiz5AvYTTLm5t6zMwy48RvZpYZN/WYGeC+n5xkk/h9UJv1zn0/+WhL4pf0JLAUWAEsj4gppW/TB7WZGdDeGv/uEfFcG7dvZpYld+6amWWmXYk/gGslzZY0td4MkqZK6pLU1d3d3eLwzMxWXe1K/DtHxPuBfYBjJX2kdoaIOCcipkTElM7OztZHaGa2impL4o+Ip9PfZ4ErgR3aEYeZWY5anvglrSNpbGUY2At4sNVxmJnlqh1X9UwArpRU2f5FEXF1G+IwM8tSyxN/RDwObNvq7Zo1kiohbTNu3Li2bt/yk80vd83qGeyP+iS1/YeBZv3lxG9mVmNVv8WLE7+ZWY1V/RYv/uWumVlmnPjNzDLjxG9mlhknfjOzzLhzN1O+dt3q8XGRByf+DPnadavHx0U+skr8rs2YmWWU+F2bMTMruHPXzCwzTvxmZplx4jczy4wTv5lZZpz4zcwyk81VPWZm/bEqX/7txG9mVmNVv/zbTT1mZplx4jczy4wTv5lZZpz4zcwy48RvZpYZJ34zs8w48ZuZZcaJ38wsM078ZmaZaUvil7S3pIclPSrppHbEYGaWq5YnfkmrAT8E9gG2Ag6WtFWr4zAzy1U7avw7AI9GxOMR8TpwMbB/G+IwM8tSO27SthHwVNX7hcAHa2eSNBWYCrDpppuWHlQzd+JrZp7hfGOmZrksergsergseoz0shi2d+eMiHOAcwCmTJlSeumsCgfjUHFZ9HBZ9HBZ9BjpZdGOpp6ngU2q3m+cxpmZWQu0I/HfA0yStLmkNYHPAzPbEIeZWZZa3tQTEcslfRG4BlgNmB4Rc1sdh5lZrtrSxh8Rs4BZ7di2mVnu/MtdM7PMOPGbmWXGid/MLDNO/GZmmdFI+CGCpG5gQZvDGA881+YYhguXRQ+XRQ+XRY/hUhabRURn7cgRkfiHA0ldETGl3XEMBy6LHi6LHi6LHsO9LNzUY2aWGSd+M7PMOPE375x2BzCMuCx6uCx6uCx6DOuycBu/mVlmXOM3M8uME7+ZWWZGZOKXNEHSRZIelzRb0p2SDmh3XENJ0vGS3jEE6wlJF1S9X11St6Rf93M9N0uakoZnSVp/ALHsJ+mkBtOW9Xd9A9j+sCmL4UjSCklzJD0o6bJGx5+kOwa4/omSDhlclOWS9A1JcyXdn8pipacD1sx/nqTPpOFd0rJzJI2uma+psm2VEZf4VTzP7H+AWyPiXRGxPcU9/TcuaXvtekrZ8cBQHBwvAVtXHYgfY5APvomIfSPihQEsNzMiTh7Mtgdp2JRFtTYeY7VeiYjJEbE18DrwD9UTK3FGxIcHuP6JwLBN/JJ2BD4BvD8itgH25O2Pie3LF4D/l8rwlZppvZZtq424xA/sAbweEf9VGRERCyLiLElrS/qppAck/V7S7gCSfifpfZX5KzU2SetImi7p7jT//mn6EZJmSroRuCG9/4WkqyU9Iuk/qta1TNJ/pm/66yXtkNb/uKT90jyrpXnuSTWJo9P43dK8l0t6SNKFKnwZ2BC4SdJNQ1Bms4C/ScMHAz+vir9RGYyWdLGk+ZKuBEZXLfOkpPFp+G/TPt0n6fw07pOS7krru17ShKpy/UEa3jydqT0g6V+HYB+bNVzKYpqk8yX9FjhfUqekK9Ixco+knVpSGo3dBrw7HaO3SZoJzIOes7NUJpWyfKv2q6Jmf5uke9Or8kVxMrBLqvme0Ohz0UYbAM9FxGsAEfFcRPwRQNL2km5R0cJwjaQNqheU9PfAZ4HvSrqwj+1UynalY0PSqJRjOtN6R0l6tPJ+yETEiHoBXwZObzDtRIoHuwBsCfwvsDZwAvDtNH4D4OE0/O/AoWl4feAPwDrAERQPge9I044AHgfWS+tbAGySpgWwTxq+ErgWWAPYFpiTxk8FvpmG1wK6gM2B3YAXKc5WRgF3Ajun+Z4Exg9BeS0DtgEuT7HPSdv9dR9l8JWqstwGWA5MqY4NeF+af3waXymvcfRcMfb3wKlV5fiDNDwT+Ns0fCywrAXHznAqi2nAbGB0en9R1f9+U2B+Gz5by9Lf1YFfAsek8nkJ2LzOfAcAM9LwmhS149EUZ6prp/GTgK40/FZZ9/a5aPV+V8UzJh0TfwDOBnZN49cA7gA60/vPVR0P5wGfqR1usmwbHRvfAo5Pw3sBVwz1vg6XU8wBk/RDYGeK06eFwFkAEfGQpAXAe4BLKRLytyi+lS9Pi+8F7Cfpq+n92hQfOoDrIuL5qk3dEBEvpm3OAzajONBfB65O8zwAvBYRb0h6gOLUtrKdbZTaAim+QCalZe+OiIVpvXPSMrcPokhWEhH3S5pIUcOtfQBOozL4CHBm1fL311n1HsBlEfFcmq9SXhsDl6Ra0ZrAE3WW3Qn4dBo+H/he//es/4ZZWcyMniaBPYGtJFWmrStpTESU3vdRZXQ6BqGolZ4LfJjiGK33P/wNcIaktYC9KZpfX5G0HvADSZOBFRSfwXoafS7qbat0EbFM0vbALsDuFP+3kyi+kLYGrkv/n9WARf1cfb2yfS/1j43pFF8O3wf+DvjpgHeqgZGY+OfSkzCIiGPTqXYXReJfSUQ8LenPkrah+LautK8J+HREPFw9v4oOnZdqVvNa1fAKesrujUhfzcCblfki4k31tN0K+FJEXFOznd16We9QmwmcQlHr+ovqMKhfBoPZ1lnAaRExM+3jtAbztetHJMOlLKqPsVHAhyLi1cFsbJBeiYjJ1SPSvtd+FgCIiFcl3Qx8nOJzdXGadALwDMVZ7yig0T7V/Vy0U0SsAG4Gbk6Vt8MpzszmRsSOg1h1vbKte2xExFOSnpG0B7ADRd/BkBqJbfw3AmtLOqZqXKUT9DZSIUl6D0VtrfIhvgT4J2C9iKjU2K4BvqR0dEvarqSYrwGOkbRGJTZJ6/SxzFJg7BDGMJ2iueuBOrHVK4NbSR1xkramaOKodSNwkKS/SPN1pPHr0dNpeniDeH5L0SkPJRzYfRhuZQHFGemXKm9SbXkkuAQ4kqKWXDnzXQ9YFBFvAodR1JBh5WN6IJ+L0kh6r6RJVaMmUzTrPgx0quj8RdIaquozHITejo2fABdQnEWuGIJtvc2IS/ypdv0pYFdJT0i6G5gBfI2iXW5U+qa+BDgiUkcNRfPO5ymafSq+S9F+d7+kuel9GX5C0TF2r6QHgf+m75r9OcDVGprOXSJiYUScWWdSozL4ETBG0nzgOxS1ntp1zgX+DbhF0n3AaWnSNOAySbNpfGva44Bj0/9qo4Ht1cAMw7KAou9qSurknEebr/roh2uBXYHrI+L1NO5s4PBUDlvSc8ZwP7BCRef3CQzsc1GmMcAMSfNSc95WwLS0X58Bvpf2aQ5FE9hgTaPxsTEzxTPkzTzgWzaYmQ07Kn4ncnpE7FLG+kdiG7+Z2SordSgfQ4lNoK7xm5llZsS18ZuZ2eA48ZuZZcaJ38wsM078ZmaZceI3M8vM/wdXd8n/E8kSKgAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"WN6IauU-aqI5","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":331},"executionInfo":{"status":"ok","timestamp":1594646583149,"user_tz":240,"elapsed":3882,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"590c43e2-8f6e-45af-db35-c0a7a3b591f3"},"source":["#Box plot for ADMISSION_TYPE\n","los = df_Admission[['ADMISSION_TYPE', 'LOS']].groupby('ADMISSION_TYPE').median().reset_index()\n","print(los.columns)\n","ins_cat = los['ADMISSION_TYPE'].values.tolist()\n","print(ins_cat)\n","hist_data = []\n","for cat in ins_cat:\n","  hist_data.append(df_Admission['LOS'].loc[df_Admission['ADMISSION_TYPE']==cat].values)\n","plt.boxplot(hist_data, 0,sym='')\n","plt.xticks(ticks=[1,2,3,4,5],labels=ins_cat)\n","plt.ylabel('LOS days')\n","plt.title('Admission cat v/s LOS(days)')"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Index(['ADMISSION_TYPE', 'LOS'], dtype='object')\n","['ELECTIVE', 'EMERGENCY', 'NEWBORN', 'URGENT']\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Admission cat v/s LOS(days)')"]},"metadata":{"tags":[]},"execution_count":16},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"KQ0EHJWQzPlc","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":298},"executionInfo":{"status":"ok","timestamp":1594646583150,"user_tz":240,"elapsed":3870,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"fa687682-039d-4ece-a188-0eab4c2d8cb3"},"source":["# Bar graph for Admission type\n","los_bar = df_Admission[['ADMISSION_TYPE', 'LOS']].groupby('ADMISSION_TYPE').median().reset_index()\n","val = list(los_bar['LOS'].values)\n","lab = list(los_bar['ADMISSION_TYPE'].values)\n","plt.bar(lab,val)\n","plt.ylabel('LOS days')\n","plt.title(\"Median LOS for Admission type\")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Median LOS for Admission type')"]},"metadata":{"tags":[]},"execution_count":17},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"uRHNqiF2ABjG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":298},"executionInfo":{"status":"ok","timestamp":1594646583538,"user_tz":240,"elapsed":4246,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"0a086582-4174-426b-c7d1-d95f671997c9"},"source":["# Bar graph for Admission type\n","los_bar = df_Admission[['INSURANCE', 'LOS']].groupby('INSURANCE').median().reset_index()\n","val = list(los_bar['LOS'].values)\n","lab = list(los_bar['INSURANCE'].values)\n","plt.bar(lab,val,width=0.8)\n","plt.ylabel('LOS days')\n","plt.title(\"Median LOS for Insurance type\")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Median LOS for Insurance type')"]},"metadata":{"tags":[]},"execution_count":18},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"olh_6JBZKZl0","colab_type":"text"},"source":["# Diagnosis"]},{"cell_type":"code","metadata":{"id":"me0XnQUzKZl1","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":420},"executionInfo":{"status":"ok","timestamp":1594646584891,"user_tz":240,"elapsed":5585,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"39320f18-e0c8-4520-fce0-6bb1d17ada90"},"source":["# Fetch the diagnosis data from drive\n","path_diagnosis = \"/content/drive/My Drive/Python Project/DIAGNOSES_ICD.csv\"\n","df_Diagnosis = pd.read_csv(path_diagnosis)\n","df_Diagnosis.info()\n","df_Diagnosis['ICD9_CODE'].unique"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 651047 entries, 0 to 651046\n","Data columns (total 5 columns):\n"," #   Column      Non-Null Count   Dtype  \n","---  ------      --------------   -----  \n"," 0   ROW_ID      651047 non-null  int64  \n"," 1   SUBJECT_ID  651047 non-null  int64  \n"," 2   HADM_ID     651047 non-null  int64  \n"," 3   SEQ_NUM     651000 non-null  float64\n"," 4   ICD9_CODE   651000 non-null  object \n","dtypes: float64(1), int64(3), object(1)\n","memory usage: 24.8+ MB\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["<bound method Series.unique of 0         40301\n","1           486\n","2         58281\n","3          5855\n","4          4254\n","          ...  \n","651042    20280\n","651043    V5869\n","651044    V1279\n","651045     5275\n","651046     5569\n","Name: ICD9_CODE, Length: 651047, dtype: object>"]},"metadata":{"tags":[]},"execution_count":19}]},{"cell_type":"code","metadata":{"id":"PMujN7BXKZl5","colab_type":"code","colab":{}},"source":["# Checking for ICD9 codes for alphabets and removing those ICD 9 codes, replace with 999\n","df_Diagnosis['recode'] = df_Diagnosis['ICD9_CODE'][~df_Diagnosis['ICD9_CODE'].str.contains(\"[a-zA-Z]\").fillna(False)]\n","df_Diagnosis['recode'].fillna(value='999', inplace=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"OF_Ouak3KZl7","colab_type":"code","colab":{}},"source":["# We use only first 3 digits from the ICD 9 codes to classify into ICD 9 categories\n","df_Diagnosis['recode'] = df_Diagnosis.recode.str[0:3]\n","df_Diagnosis['recode'] = df_Diagnosis['recode'].astype(int)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tNW55qlJdAqD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":118},"executionInfo":{"status":"ok","timestamp":1594646585459,"user_tz":240,"elapsed":6135,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"f5db4b2c-d0d5-469a-a1e7-b3fea4917421"},"source":["df_Diagnosis['recode'].head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    403\n","1    486\n","2    582\n","3    585\n","4    425\n","Name: recode, dtype: int64"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"8qetHsymKZl-","colab_type":"code","colab":{}},"source":["# ICD-9 Main Category ranges\n","icd9_ranges = [(1, 140), (140, 240), (240, 280), (280, 290), (290, 320), (320, 390), \n","               (390, 460), (460, 520), (520, 580), (580, 630), (630, 680), (680, 710),\n","               (710, 740), (740, 760), (760, 780), (780, 800), (800, 1000), (1000, 2000)]\n","\n","# Associated category names\n","diag_dict = {0: 'infectious', 1: 'neoplasms', 2: 'endocrine', 3: 'blood',\n","             4: 'mental', 5: 'nervous', 6: 'circulatory', 7: 'respiratory',\n","             8: 'digestive', 9: 'genitourinary', 10: 'pregnancy', 11: 'skin', \n","             12: 'muscular', 13: 'congenital', 14: 'prenatal', 15: 'misc',\n","             16: 'injury', 17: 'misc'}\n","\n","# Re-code in terms of integer\n","for num, cat_range in enumerate(icd9_ranges):\n","    df_Diagnosis['recode'] = np.where(df_Diagnosis['recode'].between(cat_range[0],cat_range[1]), \n","            num, df_Diagnosis['recode'])\n","    \n","    \n","# Convert integer to category name using diag_dict\n","df_Diagnosis['recode'] = df_Diagnosis['recode']\n","\n","df_Diagnosis['cat'] = df_Diagnosis['recode'].replace(diag_dict)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"7uk_AEpTd8Cf","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":218},"executionInfo":{"status":"ok","timestamp":1594646585766,"user_tz":240,"elapsed":6423,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"eddf6786-575d-4a5e-8a02-1866b402b18a"},"source":["print(df_Diagnosis['cat'])"],"execution_count":null,"outputs":[{"output_type":"stream","text":["0           circulatory\n","1           respiratory\n","2         genitourinary\n","3         genitourinary\n","4           circulatory\n","              ...      \n","651042        neoplasms\n","651043           injury\n","651044           injury\n","651045        digestive\n","651046        digestive\n","Name: cat, Length: 651047, dtype: object\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"scrolled":true,"id":"wzyEUMIoKZmD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":84},"executionInfo":{"status":"ok","timestamp":1594646585997,"user_tz":240,"elapsed":6643,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"9157f0ab-457f-434c-8378-f0d048a357c3"},"source":["df_Diagnosis['recode'].unique()\n","df_Diagnosis['cat'].unique()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['circulatory', 'respiratory', 'genitourinary', 'endocrine', 'skin',\n","       'muscular', 'blood', 'digestive', 'nervous', 'neoplasms', 'misc',\n","       'injury', 'mental', 'infectious', 'congenital', 'prenatal',\n","       'pregnancy'], dtype=object)"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"dbBNCgXiKZmG","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1594646591358,"user_tz":240,"elapsed":11992,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"4ca3994e-a6af-4d89-b97e-db1d856f4b8c"},"source":["# List of diagnosis categories for each admission ID\n","hadm_list = df_Diagnosis.groupby('HADM_ID')['cat'].apply(list).reset_index()\n","hadm_list.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>HADM_ID</th>\n","      <th>cat</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>100001</td>\n","      <td>[endocrine, nervous, genitourinary, digestive,...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>100003</td>\n","      <td>[digestive, blood, infectious, digestive, circ...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>100006</td>\n","      <td>[respiratory, respiratory, respiratory, neopla...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>100007</td>\n","      <td>[digestive, digestive, injury, respiratory, ci...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>100009</td>\n","      <td>[circulatory, injury, circulatory, endocrine, ...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   HADM_ID                                                cat\n","0   100001  [endocrine, nervous, genitourinary, digestive,...\n","1   100003  [digestive, blood, infectious, digestive, circ...\n","2   100006  [respiratory, respiratory, respiratory, neopla...\n","3   100007  [digestive, digestive, injury, respiratory, ci...\n","4   100009  [circulatory, injury, circulatory, endocrine, ..."]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"id":"8hbNFB2kmJRA","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":168},"executionInfo":{"status":"ok","timestamp":1594646597243,"user_tz":240,"elapsed":448,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"d93ae05f-ac14-40ce-bd21-55dfd5c631af"},"source":["hadm_list.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 58976 entries, 0 to 58975\n","Data columns (total 2 columns):\n"," #   Column   Non-Null Count  Dtype \n","---  ------   --------------  ----- \n"," 0   HADM_ID  58976 non-null  int64 \n"," 1   cat      58976 non-null  object\n","dtypes: int64(1), object(1)\n","memory usage: 921.6+ KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-aLil1Jmkr63","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":422},"executionInfo":{"status":"ok","timestamp":1594646750210,"user_tz":240,"elapsed":14488,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi4Hc4ZknizonUL_qjZuiLVb5ciq7TML6GcLJ1-=s64","userId":"13405551189201115826"}},"outputId":"11e6d0df-c98f-4a3f-d0c1-77b2e8921222"},"source":["#hadm_list['cat'].apply(pd.Series).stack()\n","pd.get_dummies(hadm_list['cat'].apply(pd.Series).stack()).sum(level=0)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>blood</th>\n","      <th>circulatory</th>\n","      <th>congenital</th>\n","      <th>digestive</th>\n","      <th>endocrine</th>\n","      <th>genitourinary</th>\n","      <th>infectious</th>\n","      <th>injury</th>\n","      <th>mental</th>\n","      <th>misc</th>\n","      <th>muscular</th>\n","      <th>neoplasms</th>\n","      <th>nervous</th>\n","      <th>pregnancy</th>\n","      <th>prenatal</th>\n","      <th>respiratory</th>\n","      <th>skin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>58971</th>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>58972</th>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>58973</th>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>58974</th>\n","      <td>0</td>\n","      <td>7</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>58975</th>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>58976 rows × 17 columns</p>\n","</div>"],"text/plain":["       blood  circulatory  congenital  ...  prenatal  respiratory  skin\n","0          0            2           0  ...         0            0     1\n","1          1            2           0  ...         0            0     0\n","2          0            0           0  ...         0            3     0\n","3          0            1           0  ...         0            1     0\n","4          1            7           0  ...         0            0     0\n","...      ...          ...         ...  ...       ...          ...   ...\n","58971      0            5           0  ...         0            3     0\n","58972      0            4           0  ...         0            3     0\n","58973      0            4           1  ...         0            0     0\n","58974      0            7           0  ...         0            1     0\n","58975      1            2           0  ...         0            3     0\n","\n","[58976 rows x 17 columns]"]},"metadata":{"tags":[]},"execution_count":31}]},{"cell_type":"code","metadata":{"id":"QsS2TeekKZmJ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":386},"executionInfo":{"status":"ok","timestamp":1582218842648,"user_tz":300,"elapsed":15291,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"f7676640-e435-425b-aaf9-bac755be6977"},"source":["# Creating dummies for categories\n","hadm_item = pd.get_dummies(hadm_list['cat'].apply(pd.Series).stack()).sum(level=0)\n","hadm_item.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 58976 entries, 0 to 58975\n","Data columns (total 17 columns):\n","blood            58976 non-null uint8\n","circulatory      58976 non-null uint8\n","congenital       58976 non-null uint8\n","digestive        58976 non-null uint8\n","endocrine        58976 non-null uint8\n","genitourinary    58976 non-null uint8\n","infectious       58976 non-null uint8\n","injury           58976 non-null uint8\n","mental           58976 non-null uint8\n","misc             58976 non-null uint8\n","muscular         58976 non-null uint8\n","neoplasms        58976 non-null uint8\n","nervous          58976 non-null uint8\n","pregnancy        58976 non-null uint8\n","prenatal         58976 non-null uint8\n","respiratory      58976 non-null uint8\n","skin             58976 non-null uint8\n","dtypes: uint8(17)\n","memory usage: 1.4 MB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"5ML0m9U9KZmL","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":403},"executionInfo":{"status":"ok","timestamp":1582218870470,"user_tz":300,"elapsed":504,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"cf539ff3-b303-4117-e3c8-c428cff9d6ff"},"source":["# Outer join the dummies created\n","hadm_item = hadm_item.join(hadm_list['HADM_ID'], how=\"outer\")\n","hadm_item.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 58976 entries, 0 to 58975\n","Data columns (total 18 columns):\n","blood            58976 non-null uint8\n","circulatory      58976 non-null uint8\n","congenital       58976 non-null uint8\n","digestive        58976 non-null uint8\n","endocrine        58976 non-null uint8\n","genitourinary    58976 non-null uint8\n","infectious       58976 non-null uint8\n","injury           58976 non-null uint8\n","mental           58976 non-null uint8\n","misc             58976 non-null uint8\n","muscular         58976 non-null uint8\n","neoplasms        58976 non-null uint8\n","nervous          58976 non-null uint8\n","pregnancy        58976 non-null uint8\n","prenatal         58976 non-null uint8\n","respiratory      58976 non-null uint8\n","skin             58976 non-null uint8\n","HADM_ID          58976 non-null int64\n","dtypes: int64(1), uint8(17)\n","memory usage: 4.4 MB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"equCwt3YKZmN","colab_type":"code","colab":{}},"source":["df_Admission = df_Admission.merge(hadm_item, how='inner', on='HADM_ID')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"qCujKZD0KZmP","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":383},"executionInfo":{"status":"ok","timestamp":1575847215558,"user_tz":300,"elapsed":32359,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"1dd17a6e-1333-470b-9fbe-1f49e7a753d9"},"source":["df_Admission.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SUBJECT_ID</th>\n","      <th>HADM_ID</th>\n","      <th>ADMITTIME</th>\n","      <th>DEATHTIME</th>\n","      <th>ADMISSION_TYPE</th>\n","      <th>ADMISSION_LOCATION</th>\n","      <th>DISCHARGE_LOCATION</th>\n","      <th>INSURANCE</th>\n","      <th>LANGUAGE</th>\n","      <th>RELIGION</th>\n","      <th>MARITAL_STATUS</th>\n","      <th>ETHNICITY</th>\n","      <th>DIAGNOSIS</th>\n","      <th>LOS</th>\n","      <th>DECEASED</th>\n","      <th>blood</th>\n","      <th>circulatory</th>\n","      <th>congenital</th>\n","      <th>digestive</th>\n","      <th>endocrine</th>\n","      <th>genitourinary</th>\n","      <th>infectious</th>\n","      <th>injury</th>\n","      <th>mental</th>\n","      <th>misc</th>\n","      <th>muscular</th>\n","      <th>neoplasms</th>\n","      <th>nervous</th>\n","      <th>pregnancy</th>\n","      <th>prenatal</th>\n","      <th>respiratory</th>\n","      <th>skin</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>22</td>\n","      <td>165315</td>\n","      <td>2196-04-09 12:26:00</td>\n","      <td>NaN</td>\n","      <td>EMERGENCY</td>\n","      <td>EMERGENCY ROOM ADMIT</td>\n","      <td>DISC-TRAN CANCER/CHLDRN H</td>\n","      <td>Private</td>\n","      <td>NaN</td>\n","      <td>UNOBTAINABLE</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>BENZODIAZEPINE OVERDOSE</td>\n","      <td>1.144444</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>23</td>\n","      <td>152223</td>\n","      <td>2153-09-03 07:15:00</td>\n","      <td>NaN</td>\n","      <td>ELECTIVE</td>\n","      <td>PHYS REFERRAL/NORMAL DELI</td>\n","      <td>HOME HEALTH CARE</td>\n","      <td>Medicare</td>\n","      <td>NaN</td>\n","      <td>CATHOLIC</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>CORONARY ARTERY DISEASE\\CORONARY ARTERY BYPASS...</td>\n","      <td>5.496528</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>23</td>\n","      <td>124321</td>\n","      <td>2157-10-18 19:34:00</td>\n","      <td>NaN</td>\n","      <td>EMERGENCY</td>\n","      <td>TRANSFER FROM HOSP/EXTRAM</td>\n","      <td>HOME HEALTH CARE</td>\n","      <td>Medicare</td>\n","      <td>ENGL</td>\n","      <td>CATHOLIC</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>BRAIN MASS</td>\n","      <td>6.768056</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>24</td>\n","      <td>161859</td>\n","      <td>2139-06-06 16:14:00</td>\n","      <td>NaN</td>\n","      <td>EMERGENCY</td>\n","      <td>TRANSFER FROM HOSP/EXTRAM</td>\n","      <td>HOME</td>\n","      <td>Private</td>\n","      <td>NaN</td>\n","      <td>PROTESTANT QUAKER</td>\n","      <td>SINGLE</td>\n","      <td>WHITE</td>\n","      <td>INTERIOR MYOCARDIAL INFARCTION</td>\n","      <td>2.856944</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>25</td>\n","      <td>129635</td>\n","      <td>2160-11-02 02:06:00</td>\n","      <td>NaN</td>\n","      <td>EMERGENCY</td>\n","      <td>EMERGENCY ROOM ADMIT</td>\n","      <td>HOME</td>\n","      <td>Private</td>\n","      <td>NaN</td>\n","      <td>UNOBTAINABLE</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>ACUTE CORONARY SYNDROME</td>\n","      <td>3.534028</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   SUBJECT_ID  HADM_ID           ADMITTIME  ... prenatal respiratory skin\n","0          22   165315 2196-04-09 12:26:00  ...        0           0    0\n","1          23   152223 2153-09-03 07:15:00  ...        0           0    0\n","2          23   124321 2157-10-18 19:34:00  ...        1           0    0\n","3          24   161859 2139-06-06 16:14:00  ...        0           0    0\n","4          25   129635 2160-11-02 02:06:00  ...        0           0    0\n","\n","[5 rows x 32 columns]"]},"metadata":{"tags":[]},"execution_count":94}]},{"cell_type":"code","metadata":{"id":"cuReH9qR8Azf","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":118},"executionInfo":{"status":"ok","timestamp":1575847215558,"user_tz":300,"elapsed":32347,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"43bb7cc8-7617-4788-f857-ca621f9df272"},"source":["df_Diagnosis['cat'].head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0      circulatory\n","1      respiratory\n","2    genitourinary\n","3    genitourinary\n","4      circulatory\n","Name: cat, dtype: object"]},"metadata":{"tags":[]},"execution_count":95}]},{"cell_type":"code","metadata":{"id":"S9cV1KioKZmR","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":312},"executionInfo":{"status":"ok","timestamp":1575847216017,"user_tz":300,"elapsed":32794,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"046d2602-d453-4ac8-f3ee-f0cb59d625e5"},"source":["diag_cat_list = ['skin', 'infectious',  'misc', 'genitourinary', 'neoplasms', 'blood', 'respiratory', \n","                  'congenital','nervous', 'muscular', 'digestive', 'mental', 'endocrine', 'injury',\n","                 'circulatory', 'prenatal',  'pregnancy']\n","\n","Diag_los = []\n","for diag in diag_cat_list:\n","    Diag_los.append(df_Admission[[diag, 'LOS']].groupby(diag).mean().reset_index().values[1][1])\n","\n","df_diag = pd.DataFrame(list(zip(diag_list,Diag_los)),columns=['Diagnosis','Mean LOS'])\n","\n","df_diag['Mean LOS'] = df_diag['Mean LOS'].astype(int)\n","diag_bar = df_diag[['Diagnosis', 'Mean LOS']].groupby('Diagnosis').mean().reset_index()\n","val = list(diag_bar['Mean LOS'].values)\n","lab = list(diag_bar['Diagnosis'].values)\n","plt.barh(lab,val)\n","plt.xlabel(\"LOS days\")\n","plt.title(\"Mean LOS for different diagnosis category\")"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Mean LOS for different diagnosis category')"]},"metadata":{"tags":[]},"execution_count":96},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"t8tdwkXLKZmW","colab_type":"text"},"source":["# Patient"]},{"cell_type":"code","metadata":{"id":"XQftg4OxKZmY","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":235},"executionInfo":{"status":"ok","timestamp":1575847216165,"user_tz":300,"elapsed":32926,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"02dcb4b3-f10f-4f28-8e2e-d3dedb2176e6"},"source":["# Fetch the patient data from drive\n","path_patients = \"/content/drive/My Drive/Python Project/PATIENTS.csv\"\n","df_Patients = pd.read_csv(path_patients)\n","df_Patients.head()\n","df_Patients.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 46520 entries, 0 to 46519\n","Data columns (total 8 columns):\n","ROW_ID         46520 non-null int64\n","SUBJECT_ID     46520 non-null int64\n","GENDER         46520 non-null object\n","DOB            46520 non-null object\n","DOD            15759 non-null object\n","DOD_HOSP       9974 non-null object\n","DOD_SSN        13378 non-null object\n","EXPIRE_FLAG    46520 non-null int64\n","dtypes: int64(3), object(5)\n","memory usage: 2.8+ MB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"MXYEGIOMKZmn","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":67},"executionInfo":{"status":"ok","timestamp":1575847216166,"user_tz":300,"elapsed":32915,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"d4c04190-3ea7-4cf9-c741-c12df2f51456"},"source":["df_Patients['GENDER'].value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["M    26121\n","F    20399\n","Name: GENDER, dtype: int64"]},"metadata":{"tags":[]},"execution_count":98}]},{"cell_type":"code","metadata":{"id":"WcpYlOWcKZmv","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":195},"executionInfo":{"status":"ok","timestamp":1575847216167,"user_tz":300,"elapsed":32904,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"2d928128-93c8-498c-b43b-69b94161f293"},"source":["# We need only 3 columns from the patients table\n","df_Patients = df_Patients[['SUBJECT_ID', 'DOB', 'GENDER']]\n","df_Patients.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SUBJECT_ID</th>\n","      <th>DOB</th>\n","      <th>GENDER</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>249</td>\n","      <td>2075-03-13 00:00:00</td>\n","      <td>F</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>250</td>\n","      <td>2164-12-27 00:00:00</td>\n","      <td>F</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>251</td>\n","      <td>2090-03-15 00:00:00</td>\n","      <td>M</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>252</td>\n","      <td>2078-03-06 00:00:00</td>\n","      <td>M</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>253</td>\n","      <td>2089-11-26 00:00:00</td>\n","      <td>F</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   SUBJECT_ID                  DOB GENDER\n","0         249  2075-03-13 00:00:00      F\n","1         250  2164-12-27 00:00:00      F\n","2         251  2090-03-15 00:00:00      M\n","3         252  2078-03-06 00:00:00      M\n","4         253  2089-11-26 00:00:00      F"]},"metadata":{"tags":[]},"execution_count":99}]},{"cell_type":"code","metadata":{"id":"3TOp7SNlKZmy","colab_type":"code","colab":{}},"source":["# Inner join with SUBJECT_ID as key to join admissions and patient information\n","df_Adm = df_Admission.merge(df_Patients, how='inner', on='SUBJECT_ID')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0Lg-DX2dKZm6","colab_type":"code","colab":{}},"source":["# Inner join to merge first admission date info to admissions data\n","df_Adm = df_Adm.merge(df_first_adm, how='inner', on='SUBJECT_ID')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"bijKNOrTKZm8","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":689},"executionInfo":{"status":"ok","timestamp":1575847216171,"user_tz":300,"elapsed":32882,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"9edf669e-8bff-440d-d794-98ea78676355"},"source":["df_Adm.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 111662 entries, 0 to 111661\n","Data columns (total 35 columns):\n","SUBJECT_ID            111662 non-null int64\n","HADM_ID               111662 non-null int64\n","ADMITTIME             111662 non-null datetime64[ns]\n","DEATHTIME             8419 non-null object\n","ADMISSION_TYPE        111662 non-null object\n","ADMISSION_LOCATION    111662 non-null object\n","DISCHARGE_LOCATION    111662 non-null object\n","INSURANCE             111662 non-null object\n","LANGUAGE              73082 non-null object\n","RELIGION              111166 non-null object\n","MARITAL_STATUS        100786 non-null object\n","ETHNICITY             111662 non-null object\n","DIAGNOSIS             111584 non-null object\n","LOS                   111662 non-null float64\n","DECEASED              111662 non-null int64\n","blood                 111662 non-null uint8\n","circulatory           111662 non-null uint8\n","congenital            111662 non-null uint8\n","digestive             111662 non-null uint8\n","endocrine             111662 non-null uint8\n","genitourinary         111662 non-null uint8\n","infectious            111662 non-null uint8\n","injury                111662 non-null uint8\n","mental                111662 non-null uint8\n","misc                  111662 non-null uint8\n","muscular              111662 non-null uint8\n","neoplasms             111662 non-null uint8\n","nervous               111662 non-null uint8\n","pregnancy             111662 non-null uint8\n","prenatal              111662 non-null uint8\n","respiratory           111662 non-null uint8\n","skin                  111662 non-null uint8\n","DOB                   111662 non-null object\n","GENDER                111662 non-null object\n","FIRST_ADMIT           111662 non-null datetime64[ns]\n","dtypes: datetime64[ns](2), float64(1), int64(3), object(12), uint8(17)\n","memory usage: 18.0+ MB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"bG0Bbnm8KZnA","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1575847217463,"user_tz":300,"elapsed":34162,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"cb24901a-b1f9-4540-dadd-1fe432b652ff"},"source":["df_Adm['DOB']= pd.to_datetime(df_Adm['DOB']).dt.date\n","df_Adm['FIRST_ADMIT']=pd.to_datetime(df_Adm['FIRST_ADMIT']).dt.date\n","df_Adm['age'] = (df_Adm['FIRST_ADMIT'] - df_Adm['DOB'])\n","df_Adm['age'] = df_Adm['age'].astype('timedelta64[D]') \n","df_Adm['age'] = df_Adm['age'] /  np.timedelta64(1, 'D')\n","df_Adm['age'] = df_Adm['age'] // 365\n","df_Adm['age'].head()\n","df_Adm['age'] = np.where((df_Adm['age']) < 0, 90, df_Adm['age'])\n","df_Adm['age'].isnull().sum()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{"tags":[]},"execution_count":103}]},{"cell_type":"code","metadata":{"scrolled":true,"id":"m0GXEplBKZnN","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":383},"executionInfo":{"status":"ok","timestamp":1575847217464,"user_tz":300,"elapsed":34150,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"37230fe9-5677-4375-f57b-15dfa213983e"},"source":["df_Adm.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SUBJECT_ID</th>\n","      <th>HADM_ID</th>\n","      <th>ADMITTIME</th>\n","      <th>DEATHTIME</th>\n","      <th>ADMISSION_TYPE</th>\n","      <th>ADMISSION_LOCATION</th>\n","      <th>DISCHARGE_LOCATION</th>\n","      <th>INSURANCE</th>\n","      <th>LANGUAGE</th>\n","      <th>RELIGION</th>\n","      <th>MARITAL_STATUS</th>\n","      <th>ETHNICITY</th>\n","      <th>DIAGNOSIS</th>\n","      <th>LOS</th>\n","      <th>DECEASED</th>\n","      <th>blood</th>\n","      <th>circulatory</th>\n","      <th>congenital</th>\n","      <th>digestive</th>\n","      <th>endocrine</th>\n","      <th>genitourinary</th>\n","      <th>infectious</th>\n","      <th>injury</th>\n","      <th>mental</th>\n","      <th>misc</th>\n","      <th>muscular</th>\n","      <th>neoplasms</th>\n","      <th>nervous</th>\n","      <th>pregnancy</th>\n","      <th>prenatal</th>\n","      <th>respiratory</th>\n","      <th>skin</th>\n","      <th>DOB</th>\n","      <th>GENDER</th>\n","      <th>FIRST_ADMIT</th>\n","      <th>age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>22</td>\n","      <td>165315</td>\n","      <td>2196-04-09 12:26:00</td>\n","      <td>NaN</td>\n","      <td>EMERGENCY</td>\n","      <td>EMERGENCY ROOM ADMIT</td>\n","      <td>DISC-TRAN CANCER/CHLDRN H</td>\n","      <td>Private</td>\n","      <td>NaN</td>\n","      <td>UNOBTAINABLE</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>BENZODIAZEPINE OVERDOSE</td>\n","      <td>1.144444</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2131-05-07</td>\n","      <td>F</td>\n","      <td>2196-04-09</td>\n","      <td>64.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>23</td>\n","      <td>152223</td>\n","      <td>2153-09-03 07:15:00</td>\n","      <td>NaN</td>\n","      <td>ELECTIVE</td>\n","      <td>PHYS REFERRAL/NORMAL DELI</td>\n","      <td>HOME HEALTH CARE</td>\n","      <td>Medicare</td>\n","      <td>NaN</td>\n","      <td>CATHOLIC</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>CORONARY ARTERY DISEASE\\CORONARY ARTERY BYPASS...</td>\n","      <td>5.496528</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2082-07-17</td>\n","      <td>M</td>\n","      <td>2153-09-03</td>\n","      <td>71.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>23</td>\n","      <td>152223</td>\n","      <td>2153-09-03 07:15:00</td>\n","      <td>NaN</td>\n","      <td>ELECTIVE</td>\n","      <td>PHYS REFERRAL/NORMAL DELI</td>\n","      <td>HOME HEALTH CARE</td>\n","      <td>Medicare</td>\n","      <td>NaN</td>\n","      <td>CATHOLIC</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>CORONARY ARTERY DISEASE\\CORONARY ARTERY BYPASS...</td>\n","      <td>5.496528</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2082-07-17</td>\n","      <td>M</td>\n","      <td>2157-10-18</td>\n","      <td>75.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23</td>\n","      <td>124321</td>\n","      <td>2157-10-18 19:34:00</td>\n","      <td>NaN</td>\n","      <td>EMERGENCY</td>\n","      <td>TRANSFER FROM HOSP/EXTRAM</td>\n","      <td>HOME HEALTH CARE</td>\n","      <td>Medicare</td>\n","      <td>ENGL</td>\n","      <td>CATHOLIC</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>BRAIN MASS</td>\n","      <td>6.768056</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2082-07-17</td>\n","      <td>M</td>\n","      <td>2153-09-03</td>\n","      <td>71.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>23</td>\n","      <td>124321</td>\n","      <td>2157-10-18 19:34:00</td>\n","      <td>NaN</td>\n","      <td>EMERGENCY</td>\n","      <td>TRANSFER FROM HOSP/EXTRAM</td>\n","      <td>HOME HEALTH CARE</td>\n","      <td>Medicare</td>\n","      <td>ENGL</td>\n","      <td>CATHOLIC</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>BRAIN MASS</td>\n","      <td>6.768056</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2082-07-17</td>\n","      <td>M</td>\n","      <td>2157-10-18</td>\n","      <td>75.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   SUBJECT_ID  HADM_ID           ADMITTIME  ... GENDER FIRST_ADMIT   age\n","0          22   165315 2196-04-09 12:26:00  ...      F  2196-04-09  64.0\n","1          23   152223 2153-09-03 07:15:00  ...      M  2153-09-03  71.0\n","2          23   152223 2153-09-03 07:15:00  ...      M  2157-10-18  75.0\n","3          23   124321 2157-10-18 19:34:00  ...      M  2153-09-03  71.0\n","4          23   124321 2157-10-18 19:34:00  ...      M  2157-10-18  75.0\n","\n","[5 rows x 36 columns]"]},"metadata":{"tags":[]},"execution_count":104}]},{"cell_type":"code","metadata":{"id":"ZRknP4byFMzF","colab_type":"code","colab":{}},"source":["# Define 5 age-groups\n","df_Adm.loc[(df_Adm['age'] >=0) & (df_Adm['age'] < 13), 'age_group'] = 'Children'\n","df_Adm.loc[(df_Adm['age'] >=13) & (df_Adm['age'] < 20), 'age_group'] = 'Teenagers'\n","df_Adm.loc[(df_Adm['age'] >=20) & (df_Adm['age'] <= 35), 'age_group'] = 'Adults'\n","df_Adm.loc[(df_Adm['age'] >35) & (df_Adm['age'] <= 50), 'age_group'] = 'Middle-Aged'\n","df_Adm.loc[(df_Adm['age'] >50) , 'age_group'] = 'Seniors'"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"pI32n3D_Jy8q","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":118},"executionInfo":{"status":"ok","timestamp":1575847217465,"user_tz":300,"elapsed":34131,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"b40e6920-f014-47cd-dacb-15c21d8933c7"},"source":["df_Adm['age_group'].value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Seniors        76262\n","Middle-Aged    16651\n","Adults          9725\n","Children        8587\n","Teenagers        437\n","Name: age_group, dtype: int64"]},"metadata":{"tags":[]},"execution_count":106}]},{"cell_type":"code","metadata":{"id":"n8KFGcefCoeD","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":298},"executionInfo":{"status":"ok","timestamp":1575847217466,"user_tz":300,"elapsed":34118,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"08126840-793b-459f-8bd9-2ee8194f548e"},"source":["\n","los_bar = df_Adm[['age_group', 'LOS']].groupby('age_group').mean().reset_index()\n","val = list(los_bar['LOS'].values)\n","lab = list(los_bar['age_group'].values)\n","plt.bar(lab,val,width=0.8)\n","plt.ylabel(\"LOS days\")\n","plt.title(\"Age group v/s LOS(days)\")\n"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Age group v/s LOS(days)')"]},"metadata":{"tags":[]},"execution_count":107},{"output_type":"display_data","data":{"image/png":"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\ncmkAAAAASUVORK5CYII=\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"scrolled":true,"id":"84TBP3LbKZny","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":383},"executionInfo":{"status":"ok","timestamp":1575847217467,"user_tz":300,"elapsed":34104,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"8731fe79-6fcf-464e-9bcc-1d1a093bdc13"},"source":["df_Adm.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>SUBJECT_ID</th>\n","      <th>HADM_ID</th>\n","      <th>ADMITTIME</th>\n","      <th>DEATHTIME</th>\n","      <th>ADMISSION_TYPE</th>\n","      <th>ADMISSION_LOCATION</th>\n","      <th>DISCHARGE_LOCATION</th>\n","      <th>INSURANCE</th>\n","      <th>LANGUAGE</th>\n","      <th>RELIGION</th>\n","      <th>MARITAL_STATUS</th>\n","      <th>ETHNICITY</th>\n","      <th>DIAGNOSIS</th>\n","      <th>LOS</th>\n","      <th>DECEASED</th>\n","      <th>blood</th>\n","      <th>circulatory</th>\n","      <th>congenital</th>\n","      <th>digestive</th>\n","      <th>endocrine</th>\n","      <th>genitourinary</th>\n","      <th>infectious</th>\n","      <th>injury</th>\n","      <th>mental</th>\n","      <th>misc</th>\n","      <th>muscular</th>\n","      <th>neoplasms</th>\n","      <th>nervous</th>\n","      <th>pregnancy</th>\n","      <th>prenatal</th>\n","      <th>respiratory</th>\n","      <th>skin</th>\n","      <th>DOB</th>\n","      <th>GENDER</th>\n","      <th>FIRST_ADMIT</th>\n","      <th>age</th>\n","      <th>age_group</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>22</td>\n","      <td>165315</td>\n","      <td>2196-04-09 12:26:00</td>\n","      <td>NaN</td>\n","      <td>EMERGENCY</td>\n","      <td>EMERGENCY ROOM ADMIT</td>\n","      <td>DISC-TRAN CANCER/CHLDRN H</td>\n","      <td>Private</td>\n","      <td>NaN</td>\n","      <td>UNOBTAINABLE</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>BENZODIAZEPINE OVERDOSE</td>\n","      <td>1.144444</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2131-05-07</td>\n","      <td>F</td>\n","      <td>2196-04-09</td>\n","      <td>64.0</td>\n","      <td>Seniors</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>23</td>\n","      <td>152223</td>\n","      <td>2153-09-03 07:15:00</td>\n","      <td>NaN</td>\n","      <td>ELECTIVE</td>\n","      <td>PHYS REFERRAL/NORMAL DELI</td>\n","      <td>HOME HEALTH CARE</td>\n","      <td>Medicare</td>\n","      <td>NaN</td>\n","      <td>CATHOLIC</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>CORONARY ARTERY DISEASE\\CORONARY ARTERY BYPASS...</td>\n","      <td>5.496528</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2082-07-17</td>\n","      <td>M</td>\n","      <td>2153-09-03</td>\n","      <td>71.0</td>\n","      <td>Seniors</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>23</td>\n","      <td>152223</td>\n","      <td>2153-09-03 07:15:00</td>\n","      <td>NaN</td>\n","      <td>ELECTIVE</td>\n","      <td>PHYS REFERRAL/NORMAL DELI</td>\n","      <td>HOME HEALTH CARE</td>\n","      <td>Medicare</td>\n","      <td>NaN</td>\n","      <td>CATHOLIC</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>CORONARY ARTERY DISEASE\\CORONARY ARTERY BYPASS...</td>\n","      <td>5.496528</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2082-07-17</td>\n","      <td>M</td>\n","      <td>2157-10-18</td>\n","      <td>75.0</td>\n","      <td>Seniors</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>23</td>\n","      <td>124321</td>\n","      <td>2157-10-18 19:34:00</td>\n","      <td>NaN</td>\n","      <td>EMERGENCY</td>\n","      <td>TRANSFER FROM HOSP/EXTRAM</td>\n","      <td>HOME HEALTH CARE</td>\n","      <td>Medicare</td>\n","      <td>ENGL</td>\n","      <td>CATHOLIC</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>BRAIN MASS</td>\n","      <td>6.768056</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2082-07-17</td>\n","      <td>M</td>\n","      <td>2153-09-03</td>\n","      <td>71.0</td>\n","      <td>Seniors</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>23</td>\n","      <td>124321</td>\n","      <td>2157-10-18 19:34:00</td>\n","      <td>NaN</td>\n","      <td>EMERGENCY</td>\n","      <td>TRANSFER FROM HOSP/EXTRAM</td>\n","      <td>HOME HEALTH CARE</td>\n","      <td>Medicare</td>\n","      <td>ENGL</td>\n","      <td>CATHOLIC</td>\n","      <td>MARRIED</td>\n","      <td>WHITE</td>\n","      <td>BRAIN MASS</td>\n","      <td>6.768056</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2082-07-17</td>\n","      <td>M</td>\n","      <td>2157-10-18</td>\n","      <td>75.0</td>\n","      <td>Seniors</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   SUBJECT_ID  HADM_ID           ADMITTIME  ... FIRST_ADMIT   age age_group\n","0          22   165315 2196-04-09 12:26:00  ...  2196-04-09  64.0   Seniors\n","1          23   152223 2153-09-03 07:15:00  ...  2153-09-03  71.0   Seniors\n","2          23   152223 2153-09-03 07:15:00  ...  2157-10-18  75.0   Seniors\n","3          23   124321 2157-10-18 19:34:00  ...  2153-09-03  71.0   Seniors\n","4          23   124321 2157-10-18 19:34:00  ...  2157-10-18  75.0   Seniors\n","\n","[5 rows x 37 columns]"]},"metadata":{"tags":[]},"execution_count":108}]},{"cell_type":"code","metadata":{"scrolled":true,"id":"SoiJxOuXKZn0","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":722},"executionInfo":{"status":"ok","timestamp":1575847217468,"user_tz":300,"elapsed":34093,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"b410c55e-a73b-4c00-ba44-83ac10623189"},"source":["df_Adm.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 111662 entries, 0 to 111661\n","Data columns (total 37 columns):\n","SUBJECT_ID            111662 non-null int64\n","HADM_ID               111662 non-null int64\n","ADMITTIME             111662 non-null datetime64[ns]\n","DEATHTIME             8419 non-null object\n","ADMISSION_TYPE        111662 non-null object\n","ADMISSION_LOCATION    111662 non-null object\n","DISCHARGE_LOCATION    111662 non-null object\n","INSURANCE             111662 non-null object\n","LANGUAGE              73082 non-null object\n","RELIGION              111166 non-null object\n","MARITAL_STATUS        100786 non-null object\n","ETHNICITY             111662 non-null object\n","DIAGNOSIS             111584 non-null object\n","LOS                   111662 non-null float64\n","DECEASED              111662 non-null int64\n","blood                 111662 non-null uint8\n","circulatory           111662 non-null uint8\n","congenital            111662 non-null uint8\n","digestive             111662 non-null uint8\n","endocrine             111662 non-null uint8\n","genitourinary         111662 non-null uint8\n","infectious            111662 non-null uint8\n","injury                111662 non-null uint8\n","mental                111662 non-null uint8\n","misc                  111662 non-null uint8\n","muscular              111662 non-null uint8\n","neoplasms             111662 non-null uint8\n","nervous               111662 non-null uint8\n","pregnancy             111662 non-null uint8\n","prenatal              111662 non-null uint8\n","respiratory           111662 non-null uint8\n","skin                  111662 non-null uint8\n","DOB                   111662 non-null object\n","GENDER                111662 non-null object\n","FIRST_ADMIT           111662 non-null object\n","age                   111662 non-null float64\n","age_group             111662 non-null object\n","dtypes: datetime64[ns](1), float64(2), int64(3), object(14), uint8(17)\n","memory usage: 19.7+ MB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"9kfqC0xWUbAM","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":50},"executionInfo":{"status":"ok","timestamp":1575847217468,"user_tz":300,"elapsed":34081,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"5c400f0c-00f2-4a18-ef3f-1184c9328405"},"source":["print(len(df_Adm),len(df_Adm[df_Adm['DECEASED'] == 0]))\n","\n","print(len(df_Adm),len(df_Adm[df_Adm['LOS'] < 0]))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["111662 103243\n","111662 0\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"fHPLDQkcKZn4","colab_type":"code","colab":{}},"source":["# Keep only records where we do not consider deceased\n","df_Adm = df_Adm[df_Adm['DECEASED'] == 0]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"DG6h7VSuWKBO","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":722},"executionInfo":{"status":"ok","timestamp":1575847217470,"user_tz":300,"elapsed":34065,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"b3b95415-8cee-451a-d79b-e64aa47e2102"},"source":["df_Adm.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 103243 entries, 0 to 111661\n","Data columns (total 37 columns):\n","SUBJECT_ID            103243 non-null int64\n","HADM_ID               103243 non-null int64\n","ADMITTIME             103243 non-null datetime64[ns]\n","DEATHTIME             0 non-null object\n","ADMISSION_TYPE        103243 non-null object\n","ADMISSION_LOCATION    103243 non-null object\n","DISCHARGE_LOCATION    103243 non-null object\n","INSURANCE             103243 non-null object\n","LANGUAGE              68284 non-null object\n","RELIGION              102844 non-null object\n","MARITAL_STATUS        93059 non-null object\n","ETHNICITY             103243 non-null object\n","DIAGNOSIS             103169 non-null object\n","LOS                   103243 non-null float64\n","DECEASED              103243 non-null int64\n","blood                 103243 non-null uint8\n","circulatory           103243 non-null uint8\n","congenital            103243 non-null uint8\n","digestive             103243 non-null uint8\n","endocrine             103243 non-null uint8\n","genitourinary         103243 non-null uint8\n","infectious            103243 non-null uint8\n","injury                103243 non-null uint8\n","mental                103243 non-null uint8\n","misc                  103243 non-null uint8\n","muscular              103243 non-null uint8\n","neoplasms             103243 non-null uint8\n","nervous               103243 non-null uint8\n","pregnancy             103243 non-null uint8\n","prenatal              103243 non-null uint8\n","respiratory           103243 non-null uint8\n","skin                  103243 non-null uint8\n","DOB                   103243 non-null object\n","GENDER                103243 non-null object\n","FIRST_ADMIT           103243 non-null object\n","age                   103243 non-null float64\n","age_group             103243 non-null object\n","dtypes: datetime64[ns](1), float64(2), int64(3), object(14), uint8(17)\n","memory usage: 18.2+ MB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"scrolled":true,"id":"OZZy7QOtKZn7","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":638},"executionInfo":{"status":"ok","timestamp":1575847217470,"user_tz":300,"elapsed":34053,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"c2ab884b-9332-471c-98ba-9ef0fc97c452"},"source":["# Drop unused or no longer needed columns\n","df_Adm.drop(columns=['SUBJECT_ID', 'HADM_ID', 'ADMITTIME', 'ADMISSION_LOCATION',\n","                'DISCHARGE_LOCATION', 'LANGUAGE', 'FIRST_ADMIT', 'DOB',\n","                'DIAGNOSIS', 'DECEASED',  'DEATHTIME','RELIGION','ETHNICITY','MARITAL_STATUS','age'], inplace=True)\n","\n","df_Admission.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 58878 entries, 0 to 58877\n","Data columns (total 32 columns):\n","SUBJECT_ID            58878 non-null int64\n","HADM_ID               58878 non-null int64\n","ADMITTIME             58878 non-null datetime64[ns]\n","DEATHTIME             5774 non-null object\n","ADMISSION_TYPE        58878 non-null object\n","ADMISSION_LOCATION    58878 non-null object\n","DISCHARGE_LOCATION    58878 non-null object\n","INSURANCE             58878 non-null object\n","LANGUAGE              33606 non-null object\n","RELIGION              58426 non-null object\n","MARITAL_STATUS        48781 non-null object\n","ETHNICITY             58878 non-null object\n","DIAGNOSIS             58853 non-null object\n","LOS                   58878 non-null float64\n","DECEASED              58878 non-null int64\n","blood                 58878 non-null uint8\n","circulatory           58878 non-null uint8\n","congenital            58878 non-null uint8\n","digestive             58878 non-null uint8\n","endocrine             58878 non-null uint8\n","genitourinary         58878 non-null uint8\n","infectious            58878 non-null uint8\n","injury                58878 non-null uint8\n","mental                58878 non-null uint8\n","misc                  58878 non-null uint8\n","muscular              58878 non-null uint8\n","neoplasms             58878 non-null uint8\n","nervous               58878 non-null uint8\n","pregnancy             58878 non-null uint8\n","prenatal              58878 non-null uint8\n","respiratory           58878 non-null uint8\n","skin                  58878 non-null uint8\n","dtypes: datetime64[ns](1), float64(1), int64(3), object(10), uint8(17)\n","memory usage: 8.1+ MB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"scrolled":true,"id":"tQ-UjRO2KZn_","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":672},"executionInfo":{"status":"ok","timestamp":1575847217471,"user_tz":300,"elapsed":34041,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"107058d2-768e-499e-e526-50844a75015b"},"source":["# Create dummy columns for categorical variables\n","prefix_cols = ['ADM', 'INS','AGE','GEN']\n","dummy_cols = ['ADMISSION_TYPE', 'INSURANCE', 'age_group','GENDER']\n","df_Adm = pd.get_dummies(df_Adm, prefix=prefix_cols, columns=dummy_cols)\n","df_Adm.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 103243 entries, 0 to 111661\n","Data columns (total 34 columns):\n","LOS                103243 non-null float64\n","blood              103243 non-null uint8\n","circulatory        103243 non-null uint8\n","congenital         103243 non-null uint8\n","digestive          103243 non-null uint8\n","endocrine          103243 non-null uint8\n","genitourinary      103243 non-null uint8\n","infectious         103243 non-null uint8\n","injury             103243 non-null uint8\n","mental             103243 non-null uint8\n","misc               103243 non-null uint8\n","muscular           103243 non-null uint8\n","neoplasms          103243 non-null uint8\n","nervous            103243 non-null uint8\n","pregnancy          103243 non-null uint8\n","prenatal           103243 non-null uint8\n","respiratory        103243 non-null uint8\n","skin               103243 non-null uint8\n","ADM_ELECTIVE       103243 non-null uint8\n","ADM_EMERGENCY      103243 non-null uint8\n","ADM_NEWBORN        103243 non-null uint8\n","ADM_URGENT         103243 non-null uint8\n","INS_Government     103243 non-null uint8\n","INS_Medicaid       103243 non-null uint8\n","INS_Medicare       103243 non-null uint8\n","INS_Private        103243 non-null uint8\n","INS_Self Pay       103243 non-null uint8\n","AGE_Adults         103243 non-null uint8\n","AGE_Children       103243 non-null uint8\n","AGE_Middle-Aged    103243 non-null uint8\n","AGE_Seniors        103243 non-null uint8\n","AGE_Teenagers      103243 non-null uint8\n","GEN_F              103243 non-null uint8\n","GEN_M              103243 non-null uint8\n","dtypes: float64(1), uint8(33)\n","memory usage: 4.8 MB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"nDgZPfRSKZoB","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":232},"executionInfo":{"status":"ok","timestamp":1575847217640,"user_tz":300,"elapsed":34199,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"247a60d8-ab5d-46eb-fa5b-83d76c62fdbb"},"source":["df_Adm.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>LOS</th>\n","      <th>blood</th>\n","      <th>circulatory</th>\n","      <th>congenital</th>\n","      <th>digestive</th>\n","      <th>endocrine</th>\n","      <th>genitourinary</th>\n","      <th>infectious</th>\n","      <th>injury</th>\n","      <th>mental</th>\n","      <th>misc</th>\n","      <th>muscular</th>\n","      <th>neoplasms</th>\n","      <th>nervous</th>\n","      <th>pregnancy</th>\n","      <th>prenatal</th>\n","      <th>respiratory</th>\n","      <th>skin</th>\n","      <th>ADM_ELECTIVE</th>\n","      <th>ADM_EMERGENCY</th>\n","      <th>ADM_NEWBORN</th>\n","      <th>ADM_URGENT</th>\n","      <th>INS_Government</th>\n","      <th>INS_Medicaid</th>\n","      <th>INS_Medicare</th>\n","      <th>INS_Private</th>\n","      <th>INS_Self Pay</th>\n","      <th>AGE_Adults</th>\n","      <th>AGE_Children</th>\n","      <th>AGE_Middle-Aged</th>\n","      <th>AGE_Seniors</th>\n","      <th>AGE_Teenagers</th>\n","      <th>GEN_F</th>\n","      <th>GEN_M</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1.144444</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5.496528</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>5.496528</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>6.768056</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>6.768056</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["        LOS  blood  circulatory  ...  AGE_Teenagers  GEN_F  GEN_M\n","0  1.144444      0            1  ...              0      1      0\n","1  5.496528      0            4  ...              0      0      1\n","2  5.496528      0            4  ...              0      0      1\n","3  6.768056      0            2  ...              0      0      1\n","4  6.768056      0            2  ...              0      0      1\n","\n","[5 rows x 34 columns]"]},"metadata":{"tags":[]},"execution_count":115}]},{"cell_type":"markdown","metadata":{"id":"KcUxU629WRpq","colab_type":"text"},"source":["# Model Prediction\n"]},{"cell_type":"code","metadata":{"id":"VNeF-EUxgruK","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":672},"executionInfo":{"status":"ok","timestamp":1575847217641,"user_tz":300,"elapsed":34175,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"1c7ea7c9-66d5-43db-c427-0513a37ad50b"},"source":["df_Adm.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","Int64Index: 103243 entries, 0 to 111661\n","Data columns (total 34 columns):\n","LOS                103243 non-null float64\n","blood              103243 non-null uint8\n","circulatory        103243 non-null uint8\n","congenital         103243 non-null uint8\n","digestive          103243 non-null uint8\n","endocrine          103243 non-null uint8\n","genitourinary      103243 non-null uint8\n","infectious         103243 non-null uint8\n","injury             103243 non-null uint8\n","mental             103243 non-null uint8\n","misc               103243 non-null uint8\n","muscular           103243 non-null uint8\n","neoplasms          103243 non-null uint8\n","nervous            103243 non-null uint8\n","pregnancy          103243 non-null uint8\n","prenatal           103243 non-null uint8\n","respiratory        103243 non-null uint8\n","skin               103243 non-null uint8\n","ADM_ELECTIVE       103243 non-null uint8\n","ADM_EMERGENCY      103243 non-null uint8\n","ADM_NEWBORN        103243 non-null uint8\n","ADM_URGENT         103243 non-null uint8\n","INS_Government     103243 non-null uint8\n","INS_Medicaid       103243 non-null uint8\n","INS_Medicare       103243 non-null uint8\n","INS_Private        103243 non-null uint8\n","INS_Self Pay       103243 non-null uint8\n","AGE_Adults         103243 non-null uint8\n","AGE_Children       103243 non-null uint8\n","AGE_Middle-Aged    103243 non-null uint8\n","AGE_Seniors        103243 non-null uint8\n","AGE_Teenagers      103243 non-null uint8\n","GEN_F              103243 non-null uint8\n","GEN_M              103243 non-null uint8\n","dtypes: float64(1), uint8(33)\n","memory usage: 4.8 MB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"ENBvmx9yc0c3","colab_type":"code","colab":{}},"source":["df_final = df_Adm\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Vt3eaXJJZROh","colab_type":"code","colab":{}},"source":["# Creating Target and Features\n","LOS = df_final['LOS'].values\n","features = df_final.drop(columns=['LOS'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"1_7tvDqNZzH2","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":50},"executionInfo":{"status":"ok","timestamp":1575847647177,"user_tz":300,"elapsed":382,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"fee21042-8a4e-4c8f-b797-733406e97825"},"source":["# Train Test Split 80% and test 20%\n","X_train, X_test, y_train, y_test = train_test_split(features, \n","                                                    LOS, \n","                                                    test_size = .20, \n","                                                    random_state = 0)\n","\n","print(\"Training set has {} samples.\".format(X_train.shape[0]))\n","print(\"Testing set has {} samples.\".format(X_test.shape[0]))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Training set has 82594 samples.\n","Testing set has 20649 samples.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"DgS6WeX2i5He","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":50},"executionInfo":{"status":"ok","timestamp":1575848355349,"user_tz":300,"elapsed":10291,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"00096961-2bb0-4152-ccce-5ad11c78f2c9"},"source":["#Gradient Boost Model with RMSE and R2 SQUARE of Test Data\n","GradientBoostingRegressor_model = GradientBoostingRegressor(random_state=0)   \n","GradientBoostingRegressor_model.fit(X_train, y_train)\n","y_test_preds = GradientBoostingRegressor_model.predict(X_test)\n","r2 = r2_score(y_test, y_test_preds)\n","print(\"R2 score is: {:2f}\".format(r2))\n","rms = sqrt(mean_squared_error(y_test, y_test_preds))\n","print(\"RMSE is: {:2f}\".format(rms))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["R2 score is: 0.343343\n","RMSE  is: 9.546375\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"GnjZiwPDkbHk","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":50},"executionInfo":{"status":"ok","timestamp":1575848449805,"user_tz":300,"elapsed":603,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"db05c1d0-1d30-4246-cd79-dbd9a7f1eec7"},"source":["#Linear Regression Model with RMSE and R2 SQUARE of Test Data\n","LinearRegression_model = LinearRegression()   \n","LinearRegression_model.fit(X_train, y_train)\n","y_test_preds = LinearRegression_model.predict(X_test)\n","r2 = r2_score(y_test, y_test_preds)\n","print(\"R2 score is: {:2f}\".format(r2))\n","rms = sqrt(mean_squared_error(y_test, y_test_preds))\n","print(\"RMSE is: {:2f}\".format(rms))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["R2 score is: 0.260182\n","RMSE is: 10.132850\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"svwND6dBlHMQ","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":50},"executionInfo":{"status":"ok","timestamp":1575848644018,"user_tz":300,"elapsed":57899,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"5d7ef46b-2feb-41c6-c74c-2e7e6f17b82b"},"source":["#K Nearest Neighbor Model with RMSE and R2 SQUARE of Test Data\n","KNeighborsRegressor_model = KNeighborsRegressor()   \n","KNeighborsRegressor_model.fit(X_train, y_train)\n","y_test_preds = KNeighborsRegressor_model.predict(X_test)\n","r2 = r2_score(y_test, y_test_preds)\n","print(\"R2 score is: {:2f}\".format(r2))\n","rms = sqrt(mean_squared_error(y_test, y_test_preds))\n","print(\"RMSE is: {:2f}\".format(rms))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["R2 score is: 0.502407\n","RMSE is: 8.310100\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"-fTqgbqMlnB7","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":104},"executionInfo":{"status":"ok","timestamp":1575848734937,"user_tz":300,"elapsed":5356,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"dcb373ef-1d30-4b0b-ebfe-9122367929a0"},"source":["#Random Forest Model with RMSE and R2 SQUARE of Test Data\n","RandomForestRegressor_model = RandomForestRegressor()   \n","RandomForestRegressor_model.fit(X_train, y_train)\n","y_test_preds = RandomForestRegressor_model.predict(X_test)\n","r2 = r2_score(y_test, y_test_preds)\n","print(\"R2 score is: {:2f}\".format(r2))\n","rms = sqrt(mean_squared_error(y_test, y_test_preds))\n","print(\"RMSE is: {:2f}\".format(rms))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/ensemble/forest.py:245: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n","  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n"],"name":"stderr"},{"output_type":"stream","text":["R2 score is: 0.699625\n","RMSE is: 6.456560\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"7E6JrAiKdwGl","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":87},"executionInfo":{"status":"ok","timestamp":1575851612717,"user_tz":300,"elapsed":5214,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"368f1690-1216-40fc-d175-ecef8b041efd"},"source":["#Baseline Model\n","reg_model = RandomForestRegressor(random_state=200)   \n","reg_model.fit(X_train, y_train)\n","y_test_preds = reg_model.predict(X_test)\n","r2_not_refined = r2_score(y_test, y_test_preds)\n","print(\"R2 score is: {:2f}\".format(r2_not_refined))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/ensemble/forest.py:245: FutureWarning: The default value of n_estimators will change from 10 in version 0.20 to 100 in 0.22.\n","  \"10 in version 0.20 to 100 in 0.22.\", FutureWarning)\n"],"name":"stderr"},{"output_type":"stream","text":["R2 score is: 0.699715\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"DFZdJ-zq7NoS","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":205},"executionInfo":{"status":"ok","timestamp":1575861329571,"user_tz":300,"elapsed":1832449,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"d85f1fca-44d8-4aff-bda1-ebb8f7fb624d"},"source":["#Hyperparameter Tuning and Displaying best score and and best features\n","tuned_parameters = [{\"n_estimators\"      : [10,20,30],\n","            \"max_features\"      : [\"auto\", \"sqrt\", \"log2\"],\n","            \"min_samples_split\" : [2,4,8],\n","            \"bootstrap\": [True, False],\n","            \"random_state\": [0,10,42]\n","            }]\n","\n","\n","reg_model = RandomForestRegressor()  \n","grid = GridSearchCV(reg_model, tuned_parameters)\n","grid.fit(X_train, y_train)\n","reg_model_optimized = grid.best_estimator_\n","\n","\n","print(grid.best_score_)\n","print(grid.best_estimator_)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_split.py:1978: FutureWarning: The default value of cv will change from 3 to 5 in version 0.22. Specify it explicitly to silence this warning.\n","  warnings.warn(CV_WARNING, FutureWarning)\n"],"name":"stderr"},{"output_type":"stream","text":["0.6586924067918996\n","RandomForestRegressor(bootstrap=False, criterion='mse', max_depth=None,\n","                      max_features='sqrt', max_leaf_nodes=None,\n","                      min_impurity_decrease=0.0, min_impurity_split=None,\n","                      min_samples_leaf=1, min_samples_split=4,\n","                      min_weight_fraction_leaf=0.0, n_estimators=30,\n","                      n_jobs=None, oob_score=False, random_state=10, verbose=0,\n","                      warm_start=False)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"aQzSiCnSBMgV","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":67},"executionInfo":{"status":"ok","timestamp":1575855132438,"user_tz":300,"elapsed":1830,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"90756000-1c98-46c5-813d-dc2c152f064b"},"source":["#R Square of test data and RMSE of train and test data\n","y_test_preds_op = reg_model_optimized.predict(X_test)\n","y_train_preds = reg_model_optimized.predict(X_train)\n","r2_optimized = r2_score(y_test, y_test_preds)\n","print(\"Optimized R2 score is: {:2f}\".format(r2_optimized))\n","rms = sqrt(mean_squared_error(y_test, y_test_preds))\n","print(\"RMSE of Test Data is: {:2f}\".format(rms))\n","rms = sqrt(mean_squared_error(y_train, y_train_preds))\n","print(\"RMSE of Train Data is: {:2f}\".format(rms))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Optimized R2 score is: 0.699715\n","RMSE of Test Data is: 6.455592\n","RMSE of Train Data is: 2.225059\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"pPaJQUPYBXj9","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1575851541934,"user_tz":300,"elapsed":445,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"17dd1b89-c631-40ab-cd26-5df6fde2d299"},"source":["#Difference between Imporoved and tuned model \n","print('Model refinement improved R2 score by {:.4f}'.format(r2_optimized-r2_not_refined))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Model refinement improved R2 score by 0.0000\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"33JPn7CzBgSg","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":639},"executionInfo":{"status":"ok","timestamp":1575851683855,"user_tz":300,"elapsed":484,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"81bb6f77-ca26-4193-f2d8-aa5ed6bc0e94"},"source":["#Feature Importance\n","LOS = df_final['LOS'].values\n","features = df_final.drop(columns=['LOS'])\n","feature_imp = pd.DataFrame(reg_model_optimized.feature_importances_,\n","                                   index = features.columns,\n","                                   columns=['importance']).sort_values('importance', ascending=False)\n","\n","feature_imp.head(20)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>importance</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>prenatal</th>\n","      <td>0.138639</td>\n","    </tr>\n","    <tr>\n","      <th>digestive</th>\n","      <td>0.083203</td>\n","    </tr>\n","    <tr>\n","      <th>injury</th>\n","      <td>0.081853</td>\n","    </tr>\n","    <tr>\n","      <th>respiratory</th>\n","      <td>0.079908</td>\n","    </tr>\n","    <tr>\n","      <th>circulatory</th>\n","      <td>0.065777</td>\n","    </tr>\n","    <tr>\n","      <th>endocrine</th>\n","      <td>0.058977</td>\n","    </tr>\n","    <tr>\n","      <th>nervous</th>\n","      <td>0.058214</td>\n","    </tr>\n","    <tr>\n","      <th>infectious</th>\n","      <td>0.055457</td>\n","    </tr>\n","    <tr>\n","      <th>genitourinary</th>\n","      <td>0.040237</td>\n","    </tr>\n","    <tr>\n","      <th>blood</th>\n","      <td>0.035578</td>\n","    </tr>\n","    <tr>\n","      <th>misc</th>\n","      <td>0.032972</td>\n","    </tr>\n","    <tr>\n","      <th>mental</th>\n","      <td>0.030210</td>\n","    </tr>\n","    <tr>\n","      <th>skin</th>\n","      <td>0.029208</td>\n","    </tr>\n","    <tr>\n","      <th>muscular</th>\n","      <td>0.023653</td>\n","    </tr>\n","    <tr>\n","      <th>neoplasms</th>\n","      <td>0.019854</td>\n","    </tr>\n","    <tr>\n","      <th>congenital</th>\n","      <td>0.019060</td>\n","    </tr>\n","    <tr>\n","      <th>GEN_M</th>\n","      <td>0.015066</td>\n","    </tr>\n","    <tr>\n","      <th>INS_Private</th>\n","      <td>0.014863</td>\n","    </tr>\n","    <tr>\n","      <th>GEN_F</th>\n","      <td>0.014524</td>\n","    </tr>\n","    <tr>\n","      <th>INS_Medicare</th>\n","      <td>0.014258</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["               importance\n","prenatal         0.138639\n","digestive        0.083203\n","injury           0.081853\n","respiratory      0.079908\n","circulatory      0.065777\n","endocrine        0.058977\n","nervous          0.058214\n","infectious       0.055457\n","genitourinary    0.040237\n","blood            0.035578\n","misc             0.032972\n","mental           0.030210\n","skin             0.029208\n","muscular         0.023653\n","neoplasms        0.019854\n","congenital       0.019060\n","GEN_M            0.015066\n","INS_Private      0.014863\n","GEN_F            0.014524\n","INS_Medicare     0.014258"]},"metadata":{"tags":[]},"execution_count":140}]},{"cell_type":"code","metadata":{"id":"kvPdIocoFSX9","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":312},"executionInfo":{"status":"ok","timestamp":1575851705497,"user_tz":300,"elapsed":513,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"c4fb4f65-97d6-48e4-8255-d6e2c767ffc4"},"source":["#graph of feature importance\n","feature_imp_10 = feature_imp.index[0:10].tolist()\n","plt.barh(range(0,10),feature_imp['importance'].values[0:10],alpha=0.9)\n","plt.title(\"Top 10 features for predicting LOS\")\n","plt.yticks(ticks=range(0,10), labels= feature_imp_10)\n","plt.xlabel('Feature Importance ')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 0, 'Feature Importance ')"]},"metadata":{"tags":[]},"execution_count":141},{"output_type":"display_data","data":{"image/png":"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\nAAAASUVORK5CYII=\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"b_oD25fQXiNv","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":282},"executionInfo":{"status":"ok","timestamp":1575851739912,"user_tz":300,"elapsed":586,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"d50b0363-2eb3-4c99-add9-d800453bf5bb"},"source":["import seaborn as sns\n","sns.heatmap(feature_imp[0:10], annot = True)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f273466c240>"]},"metadata":{"tags":[]},"execution_count":142},{"output_type":"display_data","data":{"image/png":"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\nHeeccwnz/whUuyIOl8XrAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"4GA0YD_FHa8i","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":396},"executionInfo":{"status":"ok","timestamp":1575852311188,"user_tz":300,"elapsed":746,"user":{"displayName":"Ninad Bagwe","photoUrl":"https://lh3.googleusercontent.com/a-/AAuE7mARBwDMgJVTLRaE0-Kxm7Esmp1e5krvZ-E1JxRh=s64","userId":"13405551189201115826"}},"outputId":"4f365d67-d2e0-4aab-a9ac-8b92efbe1295"},"source":["#Comparision RMSE of optimized random forest model with RMSE of average and median model\n","avg_los = np.repeat(np.mean(y_test), len(y_test))\n","median_los = np.repeat(np.median(y_test),len(y_test))\n","\n","rms_gb = sqrt(mean_squared_error(y_test,y_test_preds_op))\n","rms_avg = sqrt(mean_squared_error(y_test,avg_los))\n","rms_med = sqrt(mean_squared_error(y_test,median_los))\n","\n","print(rms_avg,rms_gb,rms_med)\n","data = {'Model_type' : ['Optimised RF','Average','Median'], 'RMSE':[rms_gb,rms_avg,rms_med]}\n","pd_com = pd.DataFrame(data)\n","print(pd_com)\n","\n","val = list(pd_com['RMSE'].values)\n","lab = list(pd_com['Model_type'].values)\n","plt.barh(lab,val)\n","plt.ylabel(\"Model type\")\n","plt.xlabel(\"RMSE\")\n","plt.title(\"RMSE comparison by model type\")\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["11.780644791448218 5.894498917053066 12.297355012842376\n","     Model_type       RMSE\n","0  Optimised RF   5.894499\n","1       Average  11.780645\n","2        Median  12.297355\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'RMSE comparison by model type')"]},"metadata":{"tags":[]},"execution_count":146},{"output_type":"display_data","data":{"image/png":"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\nAAAAAElFTkSuQmCC\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"InpA6R8xHa5c","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}